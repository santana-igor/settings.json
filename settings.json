{
    "editor.fontSize": 12,
    "editor.tabSize": 4,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.snippetSuggestions": "top",
    "beautify.language": {
        "js": {
            "type": [
                "javascript",
                "typescript",
                "json"
            ],
            "filename": [
                ".jshintrc",
                ".jsbeautify"
            ]
        },
        "css": [
            "css",
            "scss"
        ],
        "html": [
            "htm",
            "html"
        ]
    },
    "window.zoomLevel": 0,
    "explorer.confirmDelete": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "git.enableSmartCommit": true,
    "workbench.colorTheme": "Material Theme Palenight High Contrast",
    "workbench.iconTheme": "vscode-icons",
    "pug2html.compileOptions": {
        "doctype": "html",
        "pretty": true
    },
    "path-intellisense.extensionOnImport": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "breadcrumbs.enabled": true,
    "markdown.preview.breaks": true,
    "npm.autoDetect": "off",
    "eslint.autoFixOnSave": true,
    "editor.fontLigatures": true,
    "vsicons.projectDetection.autoReload": true,
    "files.autoSave": "onFocusChange"
}




  // Controls auto save of dirty files. Read more about autosave [here](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save).
  //  - off: Um arquivo sujo nunca é automaticamente salvo.
  //  - afterDelay: A dirty file is automatically saved after the configured `files.autoSaveDelay`.
  //  - onFocusChange: Um arquivo sujo é salvo automaticamente quando o editor perde o foco.
  //  - onWindowChange: Um arquivo sujo é salvo automaticamente quando a janela perde o foco.
  "files.autoSave": "off",

  // Controla o tamanho da fonte em pixels.
  "editor.fontSize": 14,

  // Controla a família de fontes.
  "editor.fontFamily": "Consolas, 'Courier New', monospace",

  // O número de espaços equivalentes a uma tabulação. Esta configuração é sobreposta com base no conteúdo do arquivo quando `editor.detectIndentation` está ligado.
  "editor.tabSize": 4,

  // Controla como o editor deve processar caracteres de espaço em branco.
  //  - none
  //  - boundary: Processa caracteres de espaço em branco, exceto espaços simples entre palavras.
  //  - all
  "editor.renderWhitespace": "none",

  // Controla o estilo do cursor.
  "editor.cursorStyle": "line",

  // O modificador a ser usado para adicionar vários cursores com o mouse. Os gestos do mouse de Ir Para Definição e Abrir Link irão adaptar-se de forma que eles não entrem em conflito com o modificador multicursor. [Leia mais] (https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
  //  - ctrlCmd: Mapeia para 'Control' no Windows e Linux e para 'Command' no macOS.
  //  - alt: Mapeia para 'Alt' em Windows e Linux e para 'Option' em macOS.
  "editor.multiCursorModifier": "alt",

  // Insere espaços quanto pressionado Tab. Esta configuração é sobrescrita com base no conteúdo do arquivo quando '#editor.detectIndentation#' está habilitado.
  "editor.insertSpaces": true,

  // Controla como as linhas devem ser disposto.
  //  - off: As linhas nunca serão quebradas.
  //  - on: As linhas serão quebradas na largura de visualização
  //  - wordWrapColumn: Quebras de linhas ocorrerão conforme a configuração `editor.wordWrapColumn`.
  //  - bounded: As linhas serão quebradas no mínimo entre a largura de visualização e `editor.wordWrapColumn`.
  "editor.wordWrap": "off",

  // Configure glob patterns for excluding files and folders. For example, the files explorer decides which files and folders to show or hide based on this setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true
  },

  // Configure file associations to languages (e.g. `"*.extension": "html"`). These have precedence over the default associations of the languages installed.
  "files.associations": {}

}
,
{


  // Controla se o editor de diferenças mostra alterações no espaço em branco no começo ou final como diferentes.
  "diffEditor.ignoreTrimWhitespace": true,

  // Controla se o editor de diferenças mostra indicadores +/- para alterações adicionadas / removidas.
  "diffEditor.renderIndicators": true,

  // Controla se o editor de diferenças mostra a comparação lado a lado ou na linha.
  "diffEditor.renderSideBySide": true,

  // Controla se as sugestões devem ser aceitas em caracteres de confirmação. Por exemplo, em JavaScript, o ponto e vírgula (';') pode ser um caractere de confirmação que aceita uma sugestão e digita esse caractere.
  "editor.acceptSuggestionOnCommitCharacter": true,

  // Controla se as sugestões devem ser aceitas ao pressionar 'Enter', além de 'Tab'. Ajuda a evitar a ambiguidade entre a inserção de novas linhas ou ao aceitar sugestões.
  //  - on
  //  - smart: Somente aceita uma sugestão ao pressionar 'Enter' quando fizer uma mudança textual.
  //  - off
  "editor.acceptSuggestionOnEnter": "on",

  // Controla quando o editor deve executar em modo otimizado para leitores de tela.
  //  - auto: O editor irá utilizar a plataforma da API para detectar quando um leitor de tela está conectado.
  //  - on: O editor será permanentemente otimizado para o uso de um leitor de tela.
  //  - off: O editor nunca será otimizado para o uso de um leitor de tela.
  "editor.accessibilitySupport": "auto",

  // Controla se o editor deve fechar automaticamente os colchetes depois do usuário abrir um colchete.
  //  - always
  //  - languageDefined: Use as configurações de idioma para determinar quando fechar os parênteses automaticamente.
  //  - beforeWhitespace: Fechar os parênteses automaticamente somente quando o cursor está à esquerda do espaço em branco.
  //  - never
  "editor.autoClosingBrackets": "languageDefined",

  // Controla se o editor deve fechar automaticamente aspas depois que o usuário adiciona aspas de abertura.
  //  - always
  //  - languageDefined: Use as configurações de idioma para determinar quando fechar as aspas automaticamente.
  //  - beforeWhitespace: Fechar aspas automaticamente somente quando o cursor está à esquerda do espaço em branco.
  //  - never
  "editor.autoClosingQuotes": "languageDefined",

  // Controla se o editor deve ajustar automaticamente o recuo quando os usuários digitam, colam ou movem linhas. Extensões com regras de recuo da linguagem devem estar disponíveis.
  "editor.autoIndent": true,

  // Controla se o editor deve envolver automaticamente as seleções.
  //  - languageDefined: Use as configurações de idioma para determinar quando envolver automaticamente as seleções.
  //  - brackets: Envolver com colchetes, mas não com aspas.
  //  - quotes: Envolver com aspas, mas não os colchetes.
  //  - never
  "editor.autoSurround": "languageDefined",

  // Tipos de ação de código a serem executadas ao salvar.
  "editor.codeActionsOnSave": {},

  // Tempo limite em milissegundos, após o qual as ações de código que são executadas em salvar são canceladas.
  "editor.codeActionsOnSaveTimeout": 750,

  // Controla se o editor mostra CodeLens
  "editor.codeLens": true,

  // Controla se o editor deve processar os decoradores de cor inline e o seletor de cores.
  "editor.colorDecorators": true,

  // Controla se o realce de sintaxe deve ser copiado para a área de transferência.
  "editor.copyWithSyntaxHighlighting": true,

  // Controla o estilo de animação do cursor.
  "editor.cursorBlinking": "blink",

  // Controla o estilo do cursor.
  "editor.cursorStyle": "line",

  // Controla a largura do cursor quando '#editor.cursorStyle#' é definido como 'linha'.
  "editor.cursorWidth": 0,

  // Quando um arquivo está sendo aberto, 'editor.tabSize' e 'editor.insertSpace' será detectado com base no conteúdo do arquivo.
  "editor.detectIndentation": true,

  // 
  // Controla se o editor deve permitir a movimentação de seleções por meio de arrastar e soltar.
  "editor.dragAndDrop": true,

  // Controla se a cópia sem nenhuma seleção copia a linha atual.
  "editor.emptySelectionClipboard": true,

  // Controla se a busca será realizada no texto selecionado ou em todo o arquivo no editor.
  "editor.find.autoFindInSelection": false,

  // Controla se a sequência de caracteres de Pesquisar no Widget encontrar é semeada de seleção do editor.
  "editor.find.seedSearchStringFromSelection": true,

  // Controla se o editor tem codigo colapsível hablitado
  "editor.folding": true,

  // Controla a estratégia para a computação de intervalos de dobra. 'auto' usa uma estratégia de linguagem específica de dobra, se disponível. 'Recuo' usa a estratégia dobra baseada no recuo.
  "editor.foldingStrategy": "auto",

  // Controla a família de fontes.
  "editor.fontFamily": "Consolas, 'Courier New', monospace",

  // Ativa/desativa ligaduras de fonte.
  "editor.fontLigatures": false,

  // Controla o tamanho da fonte em pixels.
  "editor.fontSize": 14,

  // Controla o peso da fonte.
  "editor.fontWeight": "normal",

  // Controla se o editor deve formatar automaticamente o conteúdo colado. Um formatador deve estar disponível e o formatador deve ser capaz de Formatar um intervalo em um documento.
  "editor.formatOnPaste": false,

  // Formata um arquivo no salvamento. Um formatador deve estar disponível, o arquivo não deve ser salvo automaticamente e editor não deve ser desligado.
  "editor.formatOnSave": false,

  // Timeout in milliseconds after which the formatting that is run on file save is cancelled.
  "editor.formatOnSaveTimeout": 750,

  // Controla se o editor deve formatar automaticamente a linha depois de digitar.
  "editor.formatOnType": false,

  // Controla se o editor deve renderizar a margem vertical de ícones. A margem vertical de ícones é usada primordialmente na depuração
  "editor.glyphMargin": true,

  // Controla se o cursor deve ser oculto na régua de visão geral.
  "editor.hideCursorInOverviewRuler": false,

  // Controla se o editor deve destacar o guia ativo de recuo.
  "editor.highlightActiveIndentGuide": true,

  // Controla o atraso em milissegundos, após o qual sugestões rápidas serão exibidas.
  "editor.hover.delay": 300,

  // Controla se o foco é mostrado.
  "editor.hover.enabled": true,

  // Controla se o foco deve permanecer visível quando o mouse é movido sobre ele.
  "editor.hover.sticky": true,

  // Insere espaços quanto pressionado Tab. Esta configuração é sobrescrita com base no conteúdo do arquivo quando '#editor.detectIndentation#' está habilitado.
  "editor.insertSpaces": true,

  // Tratamento especial para arquivos grandes para desabilitar determinados recursos que fazem uso intensivo de memória.
  "editor.largeFileOptimizations": true,

  // Controla o espaçamento da letra em pixels.
  "editor.letterSpacing": 0,

  // 
  // Ativa a lâmpada de ação de código no editor.
  "editor.lightbulb.enabled": true,

  // Controla a altura da linha. Use 0 para computar a altura da linha a partir do tamanho da fonte.
  "editor.lineHeight": 0,

  // Controla a exibição de números de linha.
  //  - off: Números de linhas não são renderizados.
  //  - on: Números de linhas são renderizados em números absolutos.
  //  - relative: Números de linhas são renderizadas como distância em linhas até a posição do cursor.
  //  - interval: Números de linhas são renderizados a cada 10 linhas.
  "editor.lineNumbers": "on",

  // 
  // Controla se o editor deve detectar links e torná-los clicáveis.
  "editor.links": true,

  // Realça colchetes correspondente quando um deles estiver selecionado.
  "editor.matchBrackets": true,

  // Controla se o minimapa é mostrado.
  "editor.minimap.enabled": true,

  // Limite a largura do minimap para processar no máximo um certo número de colunas.
  "editor.minimap.maxColumn": 120,

  // Processa os personagens reais em uma linha em vez de blocos de cor.
  "editor.minimap.renderCharacters": true,

  // Controla se o controle deslizante minimap é oculto automaticamente.
  "editor.minimap.showSlider": "mouseover",

  // Controla o lado onde renderizar o minimapa.
  "editor.minimap.side": "right",

  // Um multiplicador a ser usado no 'deltaX' e 'deltaY' nos eventos de rolagem da roda do mouse.
  "editor.mouseWheelScrollSensitivity": 1,

  // Ampliar a fonte do editor ao usar a roda do mouse e pressionando a tecla 'Ctrl'.
  "editor.mouseWheelZoom": false,

  // Mesclar vários cursores quando eles estão sobrepostos.
  "editor.multiCursorMergeOverlapping": true,

  // O modificador a ser usado para adicionar vários cursores com o mouse. Os gestos do mouse de Ir Para Definição e Abrir Link irão adaptar-se de forma que eles não entrem em conflito com o modificador multicursor. [Leia mais] (https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
  //  - ctrlCmd: Mapeia para 'Control' no Windows e Linux e para 'Command' no macOS.
  //  - alt: Mapeia para 'Alt' em Windows e Linux e para 'Option' em macOS.
  "editor.multiCursorModifier": "alt",

  // Controla se o editor deve destacar as ocorrências de símbolos semânticos.
  "editor.occurrencesHighlight": true,

  // Controla se a borda deve ser desenhada em torno da régua de visão geral.
  "editor.overviewRulerBorder": true,

  // Controla o número de decorações que podem aparecer na mesma posição na régua de visão geral.
  "editor.overviewRulerLanes": 3,

  // Controla se o menu de dicas do parâmetro é alternado ou fechado ao atingir o final da lista.
  "editor.parameterHints.cycle": false,

  // Permite que um pop-up que mostra informações de documentação e o tipo de parâmetro quando você digita.
  "editor.parameterHints.enabled": true,

  // Controla se as sugestões devem aparecer automaticamente ao digitar.
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": false
  },

  // Controla o atraso em milissegundos, após o qual sugestões rápidas serão exibidas.
  "editor.quickSuggestionsDelay": 10,

  // Controla se o editor deve processar caracteres de controle.
  "editor.renderControlCharacters": false,

  // Controla se o editor deve processar guias de recuos.
  "editor.renderIndentGuides": true,

  // Controla como o editor deve processar o destaque de linha atual.
  //  - none
  //  - gutter
  //  - line
  //  - all: Destacar tanto a calha quanto a linha atual.
  "editor.renderLineHighlight": "line",

  // Controla como o editor deve processar caracteres de espaço em branco.
  //  - none
  //  - boundary: Processa caracteres de espaço em branco, exceto espaços simples entre palavras.
  //  - all
  "editor.renderWhitespace": "none",

  // Controla se o editor deve renderizar caracteres de controle
  "editor.roundedSelection": true,

  // Renderiza réguas verticais após um certo número de caracteres de espaço. Use vários valores para várias réguas. Réguas não serão desenhadas se o array estiver vazio
  "editor.rulers": [],

  // Controla o número de caracteres extras, além do qual o editor irá rolar horizontalmente.
  "editor.scrollBeyondLastColumn": 5,

  // Controla se o editor irá rolar além da última linha.
  "editor.scrollBeyondLastLine": true,

  // 
  // Controla se o editor deve destacar correspondências semelhantes à seleção
  "editor.selectionHighlight": true,

  // Controla se os controles de desdobramento na divisão são ocultas automaticamente.
  "editor.showFoldingControls": "mouseover",

  // Controla o esmaecimento de código não utilizado.
  "editor.showUnused": true,

  // Controla se o editor irá rolar usando uma animação.
  "editor.smoothScrolling": false,

  // Controla se os snippets são exibidos juntamente com as outras sugestões e como eles são ordenados.
  //  - top: Mostre sugestões de trecho acima de outras sugestões.
  //  - bottom: Mostre sugestões de trecho abaixo de outras sugestões.
  //  - inline: Mostre sugestões de trechos com outras sugestões.
  //  - none: Não mostre sugestões de trecho.
  "editor.snippetSuggestions": "inline",

  // Manter editores de visualização abertos mesmo quando pressionado duplo clique em seu conteúdo ou ao clicar em 'Escape'.
  "editor.stablePeek": false,

  // Controla se as sugestões de filtragem e ordenação valem para pequenos erros de digitação.
  "editor.suggest.filterGraceful": true,

  // Controla se ordena as palavras favoritas que aparecem perto do cursor.
  "editor.suggest.localityBonus": false,

  // Controla se um trecho de código atualmente em inserção impede que sugestões rápidas apareçam.
  "editor.suggest.snippetsPreventQuickSuggestions": true,

  // Tamanho da fonte para a ferramenta sugerida. Quando definido como '0', o valor de '#editor.fontSize#' será usado.
  "editor.suggestFontSize": 0,

  // Altura da linha para a ferramenta sugerida. Quando definido como '0', o valor de '#editor.lineHeight#' será usado.
  "editor.suggestLineHeight": 0,

  // Controla se as sugestões devem aparecer automaticamente ao digitar caracteres de gatilho.
  "editor.suggestOnTriggerCharacters": true,

  // Controla como as sugestões são pré-selecionados quando estiver mostrando a lista de sugestões.
  //  - first: Escolha sempre a primeira sugestão.
  //  - recentlyUsed: Selecionar sugestões recentes, a menos que digitações adicionais selecionem um, por exemplo, 'console.| -> console. log ' porque 'log' foi concluída recentemente.
  //  - recentlyUsedByPrefix: Selecionar sugestões baseadas em prefixos anteriores que completaram essas sugestões, por exemplo, 'co-> console' e 'con-> const'.
  "editor.suggestSelection": "recentlyUsed",

  // Habilita conclusões de guias.
  //  - on: A guia completa irá inserir a melhor sugestão de correspondência quando pressionado tab.
  //  - off: Desative as conclusões de guias.
  //  - onlySnippets: Trechos de guias completos quando há prefixos correspondes. Funciona melhor quando 'quickSuggestions' não estão habilitadas.
  "editor.tabCompletion": "off",

  // O número de espaços equivalentes a uma tabulação. Esta configuração é sobreposta com base no conteúdo do arquivo quando `editor.detectIndentation` está ligado.
  "editor.tabSize": 4,

  // Substitui as cores e o estilo da fonte do editor do tema de cores atualmente selecionado.
  "editor.tokenColorCustomizations": {},

  // Remove o espaço em branco auto inserido à direita.
  "editor.trimAutoWhitespace": true,

  // Inserção e exclusão de espaço em branco segue paradas de tabulação.
  "editor.useTabStops": true,

  // Controla se o auto-completar deve ser calculado baseado nas palavras no documento.
  "editor.wordBasedSuggestions": true,

  // Caracteres que serão usados como separadores de palavras ao fazer navegação relacionada a palavras ou operações
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

  // Controla como as linhas devem ser disposto.
  //  - off: As linhas nunca serão quebradas.
  //  - on: As linhas serão quebradas na largura de visualização
  //  - wordWrapColumn: Quebras de linhas ocorrerão conforme a configuração `editor.wordWrapColumn`.
  //  - bounded: As linhas serão quebradas no mínimo entre a largura de visualização e `editor.wordWrapColumn`.
  "editor.wordWrap": "off",

  // Controla a quebra de coluna do editor quando `editor.wordWrap` é `wordWrapColumn` ou `bounded`
  "editor.wordWrapColumn": 80,

  // Controla o recuo das quebras de linhas.
  //  - none: Sem recuo. Quebras de linhas começam na coluna 1.
  //  - same: Quebras de linhas tem o mesmo recuo que o pai.
  //  - indent: Quebras de linhas tem recuo +1 em direção ao pai.
  //  - deepIndent: Quebras de linhas tem recuo +2 em direção ao pai.
  "editor.wrappingIndent": "same"

}
,
{


  // Controls whether inline actions are always visible in the Source Control view.
  "scm.alwaysShowActions": false,

  // Controla se sempre deverá mostrar a seção Provedor de Controle de Código Fonte.
  "scm.alwaysShowProviders": false,

  // Controla decorações do diff no editor.
  "scm.diffDecorations": "all",

  // Controla a largura(px) das decorações diff no gutter (adicionada e modificada).
  "scm.diffDecorationsGutterWidth": 3

}
,
{


  // Controla a visibilidade da barra de atividades na área de trabalho.
  "workbench.activityBar.visible": true,

  // Substitui as cores do tema do tema de cores atualmente selecionado.
  "workbench.colorCustomizations": {},

  // Especifica o tema de cores usado no espaço de trabalho.
  "workbench.colorTheme": "Default Dark+",

  // Controla o número de comandos usados recentemente a serem mantidos no histórico da paleta de comando. Definir como 0 para desativar o histórico de comandos.
  "workbench.commandPalette.history": 50,

  // Controles se o último digitado de entrada para a paleta de comando devem ser restaurados ao abri-lo da próxima vez.
  "workbench.commandPalette.preserveInput": false,

  // Controla se o layout centralizado deve redimensionar automaticamente à máxima largura quando mais de um grupo é aberto. Quando apenas um grupo estiver aberto, ele será redimensionado para a largura centralizada original.
  "workbench.editor.centeredLayoutAutoResize": true,

  // Controla o comportamento dos grupos editor vazio quando a última guia do grupo está fechada. Quando habilitado, grupos vazios irão fechar automaticamente. Quando desativado, grupos vazios continuará a ser parte da grade.
  "workbench.editor.closeEmptyGroups": true,

  // Controla se editores mostrando um arquivo que foi aberto durante a sessão devem fechar automaticamente quando ficando excluído ou renomeado por algum outro processo. Desabilitar esta manterá o editor aberto em tal evento. Observe que a exclusão de dentro do aplicativo sempre irá fechar o editor e que arquivos sujos nunca vão perto de preservar seus dados.
  "workbench.editor.closeOnFileDelete": false,

  // Controls whether opened editors show as preview. Preview editors are reused until they are pinned (e.g. via double click or editing) and show up with an italic font style.
  "workbench.editor.enablePreview": true,

  // Controls whether opened editors from Quick Open show as preview. Preview editors are reused until they are pinned (e.g. via double click or editing).
  "workbench.editor.enablePreviewFromQuickOpen": true,

  // Controla se uma borda superior é desenhada nas guias modificadas (alteradas) no editor ou não.
  "workbench.editor.highlightModifiedTabs": false,

  // Controla o formato do rótulo para um editor.
  //  - default: Mostra o nome do arquivo. Quando guias estiverem ativadas e dois arquivos em um grupo tiverem o mesmo nome, a seção de distinção para cada caminho de arquivo é adicionada. Quando guias estiverem desativadas, o caminho relativo para a pasta do espaço de trabalho é exibida se o editor estiver ativo.
  //  - short: Mostrar o nome do arquivo seguido pelo nome do diretório.
  //  - medium: Mostrar o nome do arquivo seguido pelo seu caminho relativo à raiz do espaço de trabalho.
  //  - long: Mostrar o nome do arquivo seguido pelo seu caminho absoluto.
  "workbench.editor.labelFormat": "default",

  // Onde abrem editores de controles. Selecione 'esquerda' ou 'direito' para abrir editores para a esquerda ou direita de um ativo no momento. Selecione 'primeiro' ou 'last' abrir editores independentemente do ativo no momento.
  "workbench.editor.openPositioning": "right",

  // Controla a direção do padrão de editores que são abertas lado a lado (por exemplo, a partir do explorer). Por padrão, editores abrirá no lado direito de um ativo no momento. Se mudou para 'para baixo', os editores abrirão abaixo do ativo no momento.
  "workbench.editor.openSideBySideDirection": "right",

  // Restaura o estado de exibição ontem (por exemplo, posição de rolagem) ao re-abrir arquivos depois que eles foram fechados.
  "workbench.editor.restoreViewState": true,

  // Controla se um editor é revelado em nenhum dos grupos visíveis se abriu. Se desabilitada, um editor vai preferir abrir no grupo editor ativo no momento. Se habilitado, um editor já aberto será revelado em vez de aberto novamente no grupo editor ativo no momento. Nota que há alguns casos onde essa configuração é ignorada, por exemplo, quando forçando um editor para abrir em um grupo específico ou para o lado do grupo atualmente ativo.
  "workbench.editor.revealIfOpen": false,

  // Controla se os editores abertos devem mostrar com um ícone ou não. Isso requer um tema de ícones para ser ativado também.
  "workbench.editor.showIcons": true,

  // Controla se editores abertos devem mostrar em guias ou não.
  "workbench.editor.showTabs": true,

  // Controla a posição dos botões de fechar das abas do editor ou os desabilita quando configurados para 'desligado'.
  "workbench.editor.tabCloseButton": "right",

  // Controla o dimensionamento das guias do editor.
  //  - fit: Sempre manter as guias largas o suficiente para mostrar o rótulo de editor completo.
  //  - shrink: Permitir que guias fiquem menores quando o espaço disponível não é suficiente para mostrar todas de uma só vez.
  "workbench.editor.tabSizing": "fit",

  // Fetches experiments to run from a Microsoft online service.
  "workbench.enableExperiments": true,

  // Switches back to the previous storage implementation. Only change this setting if advised to do so. **Disabling legacy storage will drop your storage state.**
  "workbench.enableLegacyStorage": true,

  // Especifica o tema de ícones usado no espaço de trabalho ou 'null' para não mostrar qualquer arquivo de ícones.
  //  - null: Nenhum arquivo de ícones
  //  - vs-minimal
  //  - vs-seti
  //  - vscode-great-icons
  //  - file-icons
  //  - file-icons-colourless
  //  - vscode-icons
  //  - ayu
  "workbench.iconTheme": "vs-seti",

  // O modificador a ser usado para adicionar um item nas listas e árvores para uma multi-seleção com o mouse (por exemplo, no explorer, editores abertos e exibição de scm). Os gestos do mouse 'Aberto para o lado' - se suportado - irão adaptar-se de tal forma que eles não entrem em conflito com o modificador de várias seleções.
  //  - ctrlCmd: Mapeia para 'Control' no Windows e Linux e para 'Command' no macOS.
  //  - alt: Mapeia para 'Alt' no Windows e Linux e 'Option' no macOS.
  "workbench.list.multiSelectModifier": "ctrlCmd",

  // Controla como abrir itens em árvores e listas usando o mouse (se suportado). Para os pais com filhos em árvores, essa configuração irá controlar se um único clique expande o pai ou um clique duplo. Note que algumas árvores e listas podem optar por ignorar essa configuração, se não for aplicável. 
  "workbench.list.openMode": "singleClick",

  // Controla o local padrão do painel (terminal, console de depurar, saída, problemas). Também pode mostrar no fundo ou no lado direito da bancada de trabalho.
  "workbench.panel.defaultLocation": "bottom",

  // Controles se rápido aberto deve fechar automaticamente uma vez perde o foco.
  "workbench.quickOpen.closeOnFocusLost": true,

  // Controls whether the last typed input to Quick Open should be restored when opening it the next time.
  "workbench.quickOpen.preserveInput": false,

  // Determina qual editor de configurações será usado como padrão
  //  - ui: Use o editor de configurações de interface do usuário.
  //  - json: Usar o editor de arquivos JSON.
  "workbench.settings.editor": "ui",

  // Controla se deve habilitar o modo de pesquisa de linguagem natural para as configurações. A pesquisa de linguagem natural é fornecida por um serviço online da Microsoft.
  "workbench.settings.enableNaturalLanguageSearch": true,

  // Controla se abrir configurações keybinding também abre um editor mostrando todas as combinações de teclas padrão.
  "workbench.settings.openDefaultKeybindings": true,

  // Controla se as configurações de abertura também abre um editor mostrando todas as configurações padrão.
  "workbench.settings.openDefaultSettings": true,

  // Controla o comportamento do editor de configurações do Sumário durante a pesquisa.
  //  - hide: Ocultar o Sumário durante a pesquisa.
  //  - filter: Filtre o Sumário para apenas as categorias que possuem as configurações correspondentes. Clicando em uma categoria filtrará os resultados para essa categoria.
  "workbench.settings.settingsSearchTocBehavior": "filter",

  // Controla a localização da barra lateral. Ele pode ser exibido à esquerda ou à direita da área de trabalho.
  "workbench.sideBar.location": "left",

  // Controles que o editor será mostrado na inicialização se nenhum for restaurado a partir da sessão anterior.
  //  - none: Iniciar sem um editor.
  //  - welcomePage: Abrir a página de boas-vindas (padrão).
  //  - newUntitledFile: Abrir um novo arquivo sem nome (se aplica somente ao abrir um espaço de trabalho vazio).
  //  - welcomePageInEmptyWorkbench: Open the Welcome page when opening an empty workbench.
  "workbench.startupEditor": "welcomePage",

  // Controla a visibilidade do feedback no Twitter (smiley) na barra de status na região inferior da área de trabalho.
  "workbench.statusBar.feedback.visible": true,

  // Controla a visibilidade da barra de status na parte inferior da área de trabalho.
  "workbench.statusBar.visible": true,

  // Quando habilitado, mostrará as dicas de marca d'água quando nenhum editor estiver aberto.
  "workbench.tips.enabled": true,

  // Controla se as árvores suportam a rolagem horizontal na área de trabalho.
  "workbench.tree.horizontalScrolling": false,

  // Controla a visibilidade das ações do cabeçalho de exibição. Ações de cabeçalho de exibição podem ser sempre visíveis ou somente visíveis quando a exibição tiver o foco ou quando passar o mouse.
  "workbench.view.alwaysShowHeaderActions": false

}
,
{


  // Se habilitado, irá mudar automaticamente para o tema de alto contraste se o Windows estiver utilizando um tema de alto contraste, e para o tema escuro ao mudar de um tema de alto contraste do Windows.
  "window.autoDetectHighContrast": true,

  // Controla se o fechamento do último editor também deve fechar a janela. Essa configuração só se aplica para as janelas que não mostram pastas.
  "window.closeWhenEmpty": false,

  // Se habilitado, os menus principais podem ser abertos através de atalhos de tecla Alt. Desativar mnemônicos permite vincular esses atalhos de tecla Alt para comandos do editor.
  "window.enableMenuBarMnemonics": true,

  // Controla a visibilidade da barra de menu. Uma configuração 'alternar' significa que a barra de menus está oculta e pressionar a tecla Alt irá mostrá-la. Por padrão, a barra de menu será visível, a menos que a janela esteja em modo de tela cheia.
  //  - default: O menu está oculto apenas em modo de tela cheia.
  //  - visible: O menu está sempre visivel mesmo quando em modo de tela cheia.
  //  - toggle: O menu está oculto, mas pode ser mostrado através da tecla Alt.
  //  - hidden: O menu está sempre oculto.
  "window.menuBarVisibility": "default",

  // Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.
  //  - default: Abrir novas janelas no centro da tela.
  //  - inherit: Abrir novas janelas com a mesma dimensão da última janela ativa.
  //  - maximized: Abrir novas janelas maximizadas.
  //  - fullscreen: Abrir novas janelas em modo de tela cheia.
  "window.newWindowDimensions": "default",

  // Controls whether files should open in a new window.
  // Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).
  //  - on: Arquivos serão abertos em uma nova janela.
  //  - off: Files will open in the window with the files' folder open or the last active window.
  //  - default: Arquivos serão abertos em uma nova janela, a menos que escolhidos dentro do aplicativo (por exemplo, através do menu de arquivo)
  "window.openFilesInNewWindow": "off",

  // Controls whether folders should open in a new window or replace the last active window.
  // Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).
  //  - on: As pastas serão abertas em uma nova janela
  //  - off: As pastas substituirão a última janela ativa
  //  - default: Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).
  "window.openFoldersInNewWindow": "default",

  // Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.
  // Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).
  //  - on: Abra uma nova janela vazia.
  //  - off: Focus the last active running instance.
  "window.openWithoutArgumentsInNewWindow": "on",

  // Controla se uma janela deve ser restaurada para o modo tela inteira se ela foi fechada no modo tela inteira.
  "window.restoreFullscreen": false,

  // Controls how windows are being reopened after a restart.
  //  - all: Reabrir todas as janelas.
  //  - folders: Reabrir todas as pastas. Espaços de trabalho vazios não serão restaurados.
  //  - one: Reabrir a última janela ativa.
  //  - none: Nunca reabrir uma janela. Sempre começar com uma janela vazia.
  "window.restoreWindows": "one",

  // Enable this workaround if scrolling is no longer smooth after restoring a minimized VS Code window. This is a workaround for an issue (https://github.com/Microsoft/vscode/issues/13612) where scrolling starts to lag on devices with precision trackpads like the Surface devices from Microsoft. Enabling this workaround can result in a little bit of layout flickering after restoring the window from minimized state but is otherwise harmless. Note: in order for this workaround to function, make sure to also set `window.titleBarStyle` to `native`.
  "window.smoothScrollingWorkaround": false,

  // Controla o título da janela baseado no editor do ativo. Variáveis são substituídas com base no contexto:
  // ${activeEditorShort}: o nome do arquivo (por exemplo MeuArquivo.txt)
  // ${activeEditorMedium}: o caminho do arquivo relativo a pasta do espaço de trabalho (por exemplo minhaPasta/meuArquivo.txt)
  // ${activeEditorLong}: o caminho completo do arquivo (por exemplo /Users/Desenvolvimento/meuProjeto/minhaPasta/meuArquivo.txt)
  // ${folderName}: nome da pasta de trabalho em que o arquivo está contido (por exemplo minhaPasta)
  // ${folderPath}: caminho de arquivo da pasta de trabalho em que o arquivo está contido (por exemplo /Users/Desenvolvimento/minhaPasta)
  // ${rootName}: nome do espaço de trabalho (por exemplo minhaPasta ou meuWorkspace)
  // ${rootPath}: caminho de arquivo do espaço de trabalho (por exemplo /Users/Desenvolvimento/meuWorkspace)
  // ${appName}: por exemplo VS Code
  // ${dirty}: um indicador de sujeira se o editor ativo estiver sujo
  // ${separator}: um separador condicional (" - ") que somente é exibido quando estiver ao redor de variáveis com valores ou texto estático
  "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",

  // Ajusta a aparência da barra de título da janela. As alterações exigem um reinício completo.
  "window.titleBarStyle": "custom",

  // Ajusta o nível de zoom da janela. O tamanho original é 0 e cada aumento (por exemplo, 1) ou redução (por exemplo, -1) representa um zoom 20% maior ou menor. Você também pode digitar decimais para ajustar o nível de zoom com uma granularidade mais fina.
  "window.zoomLevel": 0

}
,
{


  // Configure file associations to languages (e.g. `"*.extension": "html"`). These have precedence over the default associations of the languages installed.
  "files.associations": {},

  // When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language.
  "files.autoGuessEncoding": false,

  // Controls auto save of dirty files. Read more about autosave [here](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save).
  //  - off: Um arquivo sujo nunca é automaticamente salvo.
  //  - afterDelay: A dirty file is automatically saved after the configured `files.autoSaveDelay`.
  //  - onFocusChange: Um arquivo sujo é salvo automaticamente quando o editor perde o foco.
  //  - onWindowChange: Um arquivo sujo é salvo automaticamente quando a janela perde o foco.
  "files.autoSave": "off",

  // Controls the delay in ms after which a dirty file is saved automatically. Only applies when `files.autoSave` is set to `afterDelay`.
  "files.autoSaveDelay": 1000,

  // O modo de linguagem padrão que é atribuída para novos arquivos.
  "files.defaultLanguage": "",

  // Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.
  "files.enableTrash": true,

  // The default character set encoding to use when reading and writing files. This setting can also be configured per language.
  //  - utf8: UTF-8
  //  - utf8bom: UTF-8 with BOM
  //  - utf16le: UTF-16 LE
  //  - utf16be: UTF-16 BE
  //  - windows1252: Western (Windows 1252)
  //  - iso88591: Western (ISO 8859-1)
  //  - iso88593: Western (ISO 8859-3)
  //  - iso885915: Western (ISO 8859-15)
  //  - macroman: Western (Mac Roman)
  //  - cp437: DOS (CP 437)
  //  - windows1256: Arabic (Windows 1256)
  //  - iso88596: Arabic (ISO 8859-6)
  //  - windows1257: Baltic (Windows 1257)
  //  - iso88594: Baltic (ISO 8859-4)
  //  - iso885914: Celtic (ISO 8859-14)
  //  - windows1250: Central European (Windows 1250)
  //  - iso88592: Central European (ISO 8859-2)
  //  - cp852: Central European (CP 852)
  //  - windows1251: Cyrillic (Windows 1251)
  //  - cp866: Cyrillic (CP 866)
  //  - iso88595: Cyrillic (ISO 8859-5)
  //  - koi8r: Cyrillic (KOI8-R)
  //  - koi8u: Cyrillic (KOI8-U)
  //  - iso885913: Estonian (ISO 8859-13)
  //  - windows1253: Greek (Windows 1253)
  //  - iso88597: Greek (ISO 8859-7)
  //  - windows1255: Hebrew (Windows 1255)
  //  - iso88598: Hebrew (ISO 8859-8)
  //  - iso885910: Nordic (ISO 8859-10)
  //  - iso885916: Romanian (ISO 8859-16)
  //  - windows1254: Turkish (Windows 1254)
  //  - iso88599: Turkish (ISO 8859-9)
  //  - windows1258: Vietnamese (Windows 1258)
  //  - gbk: Simplified Chinese (GBK)
  //  - gb18030: Simplified Chinese (GB18030)
  //  - cp950: Traditional Chinese (Big5)
  //  - big5hkscs: Traditional Chinese (Big5-HKSCS)
  //  - shiftjis: Japanese (Shift JIS)
  //  - eucjp: Japanese (EUC-JP)
  //  - euckr: Korean (EUC-KR)
  //  - windows874: Thai (Windows 874)
  //  - iso885911: Latin/Thai (ISO 8859-11)
  //  - koi8ru: Cyrillic (KOI8-RU)
  //  - koi8t: Tajik (KOI8-T)
  //  - gb2312: Simplified Chinese (GB 2312)
  //  - cp865: Nordic DOS (CP 865)
  //  - cp850: Western European DOS (CP 850)
  "files.encoding": "utf8",

  // O caractere de fim de linha padrão.
  //  - \n: LF
  //  - \r\n: CRLF
  //  - auto: Uses operating system specific end of line character.
  "files.eol": "auto",

  // Configure glob patterns for excluding files and folders. For example, the files explorer decides which files and folders to show or hide based on this setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true
  },

  // Controla se os arquivos não salvos são lembrados entre as sessões, permitindo salvar alerta ao sair do editor seja ignorada.
  //  - off: Desabilitar a saída à quente.
  //  - onExit: Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows with backups will be restored upon next launch.
  //  - onExitAndWindowClose: Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. To restore folder windows as they were before shutdown set `window.restoreWindows` to `all`.
  "files.hotExit": "onExit",

  // Quando habilitado, inseririrá uma nova linha no final do arquivo quando salvá-lo.
  "files.insertFinalNewline": false,

  // Controls the memory available to VS Code after restart when trying to open large files. Same effect as specifying `--max-memory=NEWSIZE` on the command line.
  "files.maxMemoryForLargeFilesMB": 4096,

  // Quando habilitado, removerá todas as novas linhas após a nova linha no final do arquivo ao salvá-lo.
  "files.trimFinalNewlines": false,

  // Quando habilitado, removerá espaços em branco à direita ao salvar um arquivo.
  "files.trimTrailingWhitespace": false,

  // Usar o novo monitor experimental de arquivo.
  "files.useExperimentalFileWatcher": false,

  // Configure padrões glob de caminhos de arquivo para excluir do monitoramento de arquivo. Padrões devem corresponder a caminhos absolutos (ou seja, prefixo com ** ou o caminho completo para combinar corretamente). Alterar essa configuração requer uma reinicialização. Quando o Code estiver consumindo muito tempo de cpu na inicialização, você pode excluir pastas grandes para reduzir a carga inicial.
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true
  }

}
,
{


  // Controls whether turning on Zen Mode also centers the layout.
  "zenMode.centerLayout": true,

  // Controls whether turning on Zen Mode also puts the workbench into full screen mode.
  "zenMode.fullScreen": true,

  // Controls whether turning on Zen Mode also hides the activity bar at the left of the workbench.
  "zenMode.hideActivityBar": true,

  // Controls whether turning on Zen Mode also hides the status bar at the bottom of the workbench.
  "zenMode.hideStatusBar": true,

  // Controls whether turning on Zen Mode also hides workbench tabs.
  "zenMode.hideTabs": true,

  // Controla se uma janela deve ser restaurada para o modo zen se ela foi finalizada no modo zen.
  "zenMode.restore": false

}
,
{


  // Controls whether the explorer should automatically reveal and select files when opening them.
  "explorer.autoReveal": true,

  // Controls whether the explorer should ask for confirmation when deleting a file via the trash.
  "explorer.confirmDelete": true,

  // Controls whether the explorer should ask for confirmation to move files and folders via drag and drop.
  "explorer.confirmDragAndDrop": true,

  // Controls whether file decorations should use badges.
  "explorer.decorations.badges": true,

  // Controls whether file decorations should use colors.
  "explorer.decorations.colors": true,

  // Controls whether the explorer should allow to move files and folders via drag and drop.
  "explorer.enableDragAndDrop": true,

  // Número de editores mostrados no painel Editores Abertos.
  "explorer.openEditors.visible": 9,

  // Controls sorting order of files and folders in the explorer.
  //  - default: Arquivos e pastas são classificadas por seus nomes, em ordem alfabética. Pastas são exibidas acima dos arquivos.
  //  - mixed: Arquivos e pastas são classificadas por seus nomes, em ordem alfabética. Arquivos são misturados com pastas.
  //  - filesFirst: Arquivos e pastas são classificadas por seus nomes, em ordem alfabética. Os arquivos são exibidos acima das pastas.
  //  - type: Arquivos e pastas são classificadas de acordo com suas extensões, em ordem alfabética. Pastas são exibidas acima dos arquivos.
  //  - modified: Arquivos e pastas são classificados de acordo com a data da última modificação, em ordem decrescente. Pastas são exibidas acima dos arquivos.
  "explorer.sortOrder": "default"

}
,
{


  // Controls whether the search results will be collapsed or expanded.
  //  - auto: Files with less than 10 results are expanded. Others are collapsed.
  //  - alwaysCollapse
  //  - alwaysExpand
  "search.collapseResults": "auto",

  // Configure padrões glob para excluir os arquivos e pastas em pesquisas. Todos os padrões glob herdam a configuração de '#files.exclude#'. Leia mais sobre padrões glob [aqui] (https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true
  },

  // Controla quando seguir symlinks ao realizar uma busca.
  "search.followSymlinks": true,

  // Controla se a pesquisa será mostrada como uma exibição na barra lateral ou como um painel na área de painel para mais espaço horizontal.
  "search.location": "sidebar",

  // Whether to include results from recently opened files in the file results for Quick Open.
  "search.quickOpen.includeHistory": true,

  // Se deseja incluir os resultados de uma pesquisa de símbolo global nos resultados para Abertura Rápida de Arquivos.
  "search.quickOpen.includeSymbols": false,

  // Whether to run search in the extension host. Requires a restart to take effect.
  "search.runInExtensionHost": false,

  // Controls whether to show line numbers for search results.
  "search.showLineNumbers": false,

  // Busca insensível à caixa se o padrão estiver em minúsculas, caso contrário, busca sensível à caixa.
  "search.smartCase": false,

  // Controls whether to use global `.gitignore` and `.ignore` files when searching for files.
  "search.useGlobalIgnoreFiles": false,

  // Controls whether to use `.gitignore` and `.ignore` files when searching for files.
  "search.useIgnoreFiles": true,

  // Controls whether to use the deprecated legacy mode for text and file search. It supports some text encodings that are not supported by the standard ripgrep-based search.
  "search.useLegacySearch": false,

  // Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookbehind and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.
  "search.usePCRE2": false,

  // Controls whether to open Replace Preview when selecting or replacing a match.
  "search.useReplacePreview": true,

  // Deprecated. Consider "search.usePCRE2" for advanced regex feature support.
  // This setting is deprecated and now falls back on "search.usePCRE2".
  "search.useRipgrep": true,

  // Deprecated. Use "search.runInExtensionHost" instead
  // Whether to run search in the extension host
  "searchRipgrep.enable": false

}
,
{


  // Configura se você recebe atualizações automáticas de um canal de atualização. Requer uma reinicialização depois da mudança. As atualizações são baixadas de um serviço online da Microsoft.
  "update.channel": "default",

  // Habilita atualizações do Windows em background. As atualizações são baixadas de um serviço online da Microsoft.
  "update.enableWindowsBackgroundUpdates": true,

  // Mostra as notas de versão após uma atualização. As notas de versão são baixadas de um serviço online da Microsoft.
  "update.showReleaseNotes": true

}
,
{


  // A configuração do proxy a ser utilizada. Se não for definida será obtida das variáveis de ambiente http_proxy e https_proxy.
  "http.proxy": "",

  // O valor para enviar como o cabeçalho de 'autorização Proxy' para cada solicitação de rede.
  "http.proxyAuthorization": null,

  // Controla se o certificado do servidor de proxy deve ser verificado contra a lista de autoridades de certificação fornecida.
  "http.proxyStrictSSL": true,

  // Configuração experimental: Use a configuração de proxy do sistema.
  //  - off: Não use a configuração de proxy do sistema.
  //  - on: Use a configuração de proxy do sistema se não especificada nas opções da requisição.
  //  - force: Sempre use a configuração de proxy do sistema.
  "http.systemProxy": "off"

}
,
{


  // Allow setting breakpoints in any file.
  "debug.allowBreakpointsEverywhere": false,

  // Controls whether the non-debug hovers should be enabled while debugging. When enabled the hover providers will be called to provide a hover. Regular hovers will not be shown even if this setting is enabled.
  "debug.enableAllHovers": false,

  // Show variable values inline in editor while debugging.
  "debug.inlineValues": false,

  // Controls when the internal debug console should open.
  "debug.internalConsoleOptions": "openOnFirstSessionStart",

  // Controls when the debug view should open.
  "debug.openDebug": "openOnSessionStart",

  // Automatically open the explorer view at the end of a debug session
  "debug.openExplorerOnEnd": false,

  // Controls when the debug status bar should be visible.
  //  - never: Nunca mostrar debug na barra de status
  //  - always: Sempre mostrar depurar na barra de status
  //  - onFirstSessionStart: Mostrar depurar na barra de status somente após a depuração ser iniciada pela primeira vez
  "debug.showInStatusBar": "onFirstSessionStart",

  // Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`
  "debug.toolBarLocation": "floating",

  // Configuração global do lançamento do depurador. Deve ser usado como uma alternativa para o arquivo 'launch.json' que é compartilhado entre os espaços de trabalho
  "launch": {
    "configurations": [],
    "compounds": []
  }

}
,
{


  // Ativar/desativar o fechamento automático de tags HTML.
  "html.autoClosingTags": true,

  // Lista de tags, separado por vírgulas, onde o conteúdo não deve ser reformatado. o padrão é 'null' para a tag 'pré'.
  "html.format.contentUnformatted": "pre,code,textarea",

  // Habilita/Desabilita o formatador HTML padrão.
  "html.format.enable": true,

  // Finalizar com uma nova linha.
  "html.format.endWithNewline": false,

  // Lista de tags, separadas por vírgulas, que deveriam ter uma quebra de linha extra antes delas. 'null' admite o padrão "head, body, /html". 
  "html.format.extraLiners": "head, body, /html",

  // Formatar e indentar '{{#foo}}' e '{{/foo}}'.
  "html.format.indentHandlebars": false,

  // Indentar secões '<head>'e '<body>'.
  "html.format.indentInnerHtml": false,

  // Número máximo de quebras de linha a serem preservadas em um bloco. Use 'null' para ilimitado.
  "html.format.maxPreserveNewLines": null,

  // Controla se a quebra de linha existente antes dos elementos devem ser preservados. Só funciona antes de elementos, não dentro de rótulos ou de texto.
  "html.format.preserveNewLines": true,

  // Lista de tags, separados por vírgula, que não deveria ser reformatada. O padrão é 'null' para todas as tags listadas em https://www.w3.org/TR/html5/dom.html#phrasing-content.
  "html.format.unformatted": "wbr",

  // Agrupar atributos.
  //  - auto: Agrupar atributos somente quando o tamanho da linha é excedido.
  //  - force: Agrupar cada atributo exceto o primeiro.
  //  - force-aligned: Agrupar cada atributo, exceto o primeiro e manter alinhado.
  //  - force-expand-multiline: Agrupar cada atributo.
  //  - aligned-multiple: Agrupar quando o comprimento da linha for excedido, alinhe os atributos verticalmente.
  "html.format.wrapAttributes": "auto",

  // Quantidade máxima de caracteres por linha (0 = desativar).
  "html.format.wrapLineLength": 120,

  // Controla se o suporte interno de linguagem HTML sugere tags e propriedades Angular V1.
  "html.suggest.angular1": false,

  // Controla se o suporte interno de linguagem HTML sugere tags, propriedades e valores HTML5.
  "html.suggest.html5": true,

  // Controla se o suporte interno de linguagem HTML sugere tags, propriedades e valores Ionic.
  "html.suggest.ionic": false,

  // Rastrear a comunicação entre o VS Code e o servidor de linguagem HTML.
  "html.trace.server": "off",

  // Controla se o suporte interno de linguagem HTML valida scripts embutidos.
  "html.validate.scripts": true,

  // Controla se o suporte interno de linguagem HTMLvalida estilos embutidos.
  "html.validate.styles": true

}
,
{


  // A configuração 'json.colorDecorators.enable' foi descontinuada em favor de 'editor.colorDecorators'.
  // Habilita ou desabilita os decoradores de cor
  "json.colorDecorators.enable": true,

  // Ativar/desativar o formatador padrão JSON
  "json.format.enable": true,

  // Esquemas associadas a arquivos de JSON no projeto atual
  "json.schemas": [],

  // Loga a comunicação entre o VS Code e o servidor de linguagem JSON.
  "json.trace.server": "off"

}
,
{


  // Configura como quebras de linha são processadas na visualização de markdown. Configurando como 'true' cria um <br> para cada nova linha.
  "markdown.preview.breaks": false,

  // Duplo clique na pré-visualização markdown para alternar para o editor.
  "markdown.preview.doubleClickToSwitchToEditor": true,

  // Controla a família de fonte usada na pré-visualização de markdown.
  "markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif",

  // Controla o tamanho da fonte em pixels usado na pré-visualização de markdown.
  "markdown.preview.fontSize": 14,

  // Controla a altura de linha usada na pré-visualização de markdown. Este número é relativo ao tamanho de fonte.
  "markdown.preview.lineHeight": 1.6,

  // Habilitar ou desabilitar a conversão de texto URL para links na visualização markdown.
  "markdown.preview.linkify": true,

  // Marca a seleção atual do editor na pré-visualização de markdown.
  "markdown.preview.markEditorSelection": true,

  // Como devem ser tratados na pré-visualização os cliques em links para arquivos markdown.
  //  - inPreview: Try to open links in the markdown preview
  //  - inEditor: Tente abrir links no editor
  "markdown.preview.openMarkdownLinks": "inPreview",

  // Quando uma pré-visualização de markdown é rolada, atualiza a exibição do editor.
  "markdown.preview.scrollEditorWithPreview": true,

  // Quando um editor de markdown é rolado, atualiza a exibição da pré-visualização.
  "markdown.preview.scrollPreviewWithEditor": true,

  // Esta configuração foi substituída por 'markdown.preview.scrollPreviewWithEditor' e já não tem qualquer efeito.
  // [Descontinuada] Rola a pré-visualização Markdown para mostrar a linha atualmente selecionada no editor.
  "markdown.preview.scrollPreviewWithEditorSelection": true,

  // Configura como o frontispicio YAML frente questão devem ser processado na pré-visualização de markdown. 'hide' remove o frontispicio. Caso contrário, o frontispicio é tratado como conteúdo de markdown.
  "markdown.previewFrontMatter": "hide",

  // Uma lista de URLs ou caminhos locais para folhas de estilo CSS para usar na pré-visualização do markdown. Caminhos relativos são interpretados em relação à pasta aberta no explorer. Se não houver nenhuma pasta aberta, eles são interpretados em relação ao local do arquivo markdown. Todos os ' \' precisam ser escritos como ' \ \ '.
  "markdown.styles": [],

  // Habilitar log de depuração para a extensão do markdown.
  "markdown.trace": "off"

}
,
{


  // Controla se as sugestões da linguagem PHP serão habilitadas. O apoio sugere globais do PHP e variáveis.
  "php.suggest.basic": true,

  // Habilita/desabilita a validação interna do PHP.
  "php.validate.enable": true,

  // Aponta para o executável do PHP.
  "php.validate.executablePath": null,

  // Se o linter é executado ao salvar ou ao digitar.
  "php.validate.run": "onSave"

}
,
{


  // Ativar/desativar o fechamento automático de tags JSX. Requer o uso de TypeScript 3.0 ou mais recente na área de trabalho.
  "javascript.autoClosingTags": true,

  // Habilita/Desabilita o formatador padrão JavaScript.
  "javascript.format.enable": true,

  // Define o tratamento de espaços após um delimitador vírgula.
  "javascript.format.insertSpaceAfterCommaDelimiter": true,

  // Define a manipulação de espaços após a palavra-chave do construtor. Requer o uso do TypeScript 2.3.0 ou mais recente na área de trabalho.
  "javascript.format.insertSpaceAfterConstructor": false,

  // Define o tratamento de espaços após uma palavra-chave de função para funções anônimas.
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

  // Define o tratamento de espaços após palavras-chave em um comando de controle de fluxo.
  "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

  // Define o tratamento de espaços após a abertura e antes do fechamento de chaves da expressão JSX.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

  // Define o tratamento de espaços após a abertura e antes de fechar chaves não vazias. Requer o uso de Typescript 2.3.0 ou mais recente na área de trabalho.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

  // Define a manipulação de espaços após abrir e antes de fechar colchetes não vazios.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

  // Define a manipulação de espaços após abrir e antes de fechar parênteses não vazios.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

  // Define o tratamento de espaços após abrir e antes de fechar com chaves não vazias.
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

  // Define o tratamento de espaços após um ponto e vírgula em uma declaração.
  "javascript.format.insertSpaceAfterSemicolonInForStatements": true,

  // Define o tratamento de espaços após um operador binário.
  "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

  // Define o tratamento de espaços antes de parênteses do argumento de função.
  "javascript.format.insertSpaceBeforeFunctionParenthesis": false,

  // Define-se uma chave de abertura é colocada em uma nova linha para blocos de controle ou não.
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,

  // Define-se uma chave de abertura é colocada em uma nova linha para funções ou não.
  "javascript.format.placeOpenBraceOnNewLineForFunctions": false,

  // Ativar/desativar verificação semântica de arquivos JavaScript. Os arquivos existentes de jsconfig.json ou tsconfig.json substituem essa configuração. Requer o uso de TypeScript 2.3.1 ou mais recente na área de trabalho.
  "javascript.implicitProjectConfig.checkJs": false,

  // Ativar/desativar 'experimentalDecorators' para arquivos JavaScript que não fazem parte de um projeto. Os arquivos existentes de jsconfig.json ou tsconfig.json substituem essa configuração. Requer o uso de TypeScript 2.3.1 ou mais recente na área de trabalho.
  "javascript.implicitProjectConfig.experimentalDecorators": false,

  // Estilo de caminho preferencial para importação automática.
  //  - auto: Inferir o tipo de caminho mais curto.
  //  - relative: Relativo à localização do arquivo.
  //  - non-relative: Baseado na 'baseUrl' configurada em seu 'jsconfig.json' / 'tsconfig.json'.
  "javascript.preferences.importModuleSpecifier": "auto",

  // Estilo preferido de aspas para correções rápidas: 'single' para aspas simples, 'double' para aspas duplas ou 'auto' para inferir o tipo de aspas de importações existentes. Requer o uso de TypeScript 2.9 ou mais recente na área de trabalho.
  "javascript.preferences.quoteStyle": "auto",

  // Habilitar/desabilitar referências CodeLens em arquivos JavaScript.
  "javascript.referencesCodeLens.enabled": false,

  // Ativar/desativar sugestões de importação automática. Requer o uso de TypeScript 2.6.1 ou mais recente na área de trabalho.
  "javascript.suggest.autoImports": true,

  // Funções completas com a assinatura do parâmetro.
  "javascript.suggest.completeFunctionCalls": false,

  // Ativar/desativar sugestões de preenchimento automático.
  "javascript.suggest.enabled": true,

  // Ativar/desativar inclusão de nomes exclusivos do arquivo nas sugestões do JavaScript.
  "javascript.suggest.names": true,

  // Ativar/desativar sugestões de caminhos em declarações de importação e chamadas necessárias. 
  "javascript.suggest.paths": true,

  // Ativar/desativar o diagnóstico de sugestão para arquivos JavaScript no editor. Requer o uso do /type/script 2.8 ou mais recente na área de trabalho.
  "javascript.suggestionActions.enabled": true,

  // Ativar/desativar a atualização automática de caminhos de importação quando você renomear ou move um arquivo no VS Code. Requer o uso de TypeScript 2.9 ou mais recente na área de trabalho.
  //  - prompt: Perguntar sobre cada renomear.
  //  - always: Sempre atualize caminhos automaticamente.
  //  - never: Nunca renomeie ou solicite caminhos.
  "javascript.updateImportsOnFileMove.enabled": "prompt",

  // Habilitar/Desabilitar validação JavaScript.
  "javascript.validate.enable": true,

  // Habilitar/Desabilitar comentários JSDoc automáticos.
  "jsDocCompletion.enabled": true,

  // Ativar/desativar o fechamento automático de tags JSX. Requer o uso de TypeScript 3.0 ou mais recente na área de trabalho.
  "typescript.autoClosingTags": true,

  // Verificar se o NPM está instalado para aquisição automática de tipo.
  "typescript.check.npmIsInstalled": true,

  // Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.
  "typescript.disableAutomaticTypeAcquisition": false,

  // Habilita/Desabilita o formatador padrão TypeScript.
  "typescript.format.enable": true,

  // Define o tratamento de espaços após um delimitador vírgula.
  "typescript.format.insertSpaceAfterCommaDelimiter": true,

  // Define a manipulação de espaços após a palavra-chave do construtor. Requer o uso do TypeScript 2.3.0 ou mais recente na área de trabalho.
  "typescript.format.insertSpaceAfterConstructor": false,

  // Define o tratamento de espaços após uma palavra-chave de função para funções anônimas.
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

  // Define o tratamento de espaços após palavras-chave em um comando de controle de fluxo.
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

  // Define o tratamento de espaços após a abertura e antes do fechamento de chaves da expressão JSX.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

  // Define o tratamento de espaços após a abertura e antes de fechar chaves não vazias. Requer o uso de Typescript 2.3.0 ou mais recente na área de trabalho.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

  // Define a manipulação de espaços após abrir e antes de fechar colchetes não vazios.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

  // Define a manipulação de espaços após abrir e antes de fechar parênteses não vazios.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

  // Define o tratamento de espaços após abrir e antes de fechar com chaves não vazias.
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

  // Define o tratamento de espaços após um ponto e vírgula em uma declaração.
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,

  // Define o tratamento de espaços após declarações de tipo no Typescript. Requer o uso de Typescript 2.4 ou mais recente na área de trabalho.
  "typescript.format.insertSpaceAfterTypeAssertion": false,

  // Define o tratamento de espaços após um operador binário.
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

  // Define o tratamento de espaços antes de parênteses do argumento de função.
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,

  // Define-se uma chave de abertura é colocada em uma nova linha para blocos de controle ou não.
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

  // Define-se uma chave de abertura é colocada em uma nova linha para funções ou não.
  "typescript.format.placeOpenBraceOnNewLineForFunctions": false,

  // Habilitar/desabilitar implementações CodeLens. Este CodeLens mostra as implementações de uma interface.
  "typescript.implementationsCodeLens.enabled": false,

  // Define a localidade usada para relatar erros de JavaScript e TypeScript. Requer o uso de TypeScript 2.6.0 ou mais recente na área de trabalho. O valor padrão 'null' usa a localidade do VS Code.
  "typescript.locale": null,

  // Especifica o caminho para o executável NPM usado para Aquisição de Tipo Automático. Requer o uso de TypeScript 2.3.4 ou mais recente na área de trabalho.
  "typescript.npm": null,

  // Estilo de caminho preferencial para importação automática.
  //  - auto: Inferir o tipo de caminho mais curto.
  //  - relative: Relativo à localização do arquivo.
  //  - non-relative: Baseado na 'baseUrl' configurada em seu 'jsconfig.json' / 'tsconfig.json'.
  "typescript.preferences.importModuleSpecifier": "auto",

  // Estilo preferido de aspas para correções rápidas: 'single' para aspas simples, 'double' para aspas duplas ou 'auto' para inferir o tipo de aspas de importações existentes. Requer o uso de TypeScript 2.9 ou mais recente na área de trabalho.
  "typescript.preferences.quoteStyle": "auto",

  // Habilitar/desabilitar referências CodeLens em arquivos TypeScript.
  "typescript.referencesCodeLens.enabled": false,

  // Reportar verificações de estilo como avisos.
  "typescript.reportStyleChecksAsWarnings": true,

  // Ativar/desativar sugestões de importação automática. Requer o uso de TypeScript 2.6.1 ou mais recente na área de trabalho.
  "typescript.suggest.autoImports": true,

  // Funções completas com a assinatura do parâmetro.
  "typescript.suggest.completeFunctionCalls": false,

  // Ativar/desativar sugestões de preenchimento automático.
  "typescript.suggest.enabled": true,

  // Ativar/desativar sugestões de caminhos em declarações de importação e chamadas necessárias. 
  "typescript.suggest.paths": true,

  // Ativar/desativar o diagnóstico de sugestão para arquivos TypeScript no editor. Requer o uso do TypeScript 2.8 ou mais recente na área de trabalho.
  "typescript.suggestionActions.enabled": true,

  // Habilita/desabilita pesquisas ocasionais que nos ajudam a melhorar o JavaScript do VS Code e o suporte ao TypeScript.
  "typescript.surveys.enabled": true,

  // Controla a auto detecção de tarefas tsc.
  //  - on: Criar ambas as tarefas de compilação e monitoramento.
  //  - off: Desabilite esse recurso.
  //  - build: Só crie tarefas de compilação de execução únicas.
  //  - watch: Crie somente tarefas de compilação e monitoramento.
  "typescript.tsc.autoDetect": "on",

  // Especifica o caminho da pasta que contém os arquivos tsserver e lib*.d.ts para usar.
  "typescript.tsdk": null,

  // Habilita o log do servidor TS para um arquivo. Este log pode ser usado para diagnosticar problemas do servidor de TS. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
  "typescript.tsserver.log": "off",

  // Caminhos adicionais para descobrir os plugins do serviço de linguagem Typescript. Requer o uso do Typescript 2.3.0 ou mais recente na área de trabalho.
  "typescript.tsserver.pluginPaths": [],

  // Habilita o rastreamento de mensagens enviadas para o servidor de TS. Este rastreamento pode ser usado para diagnosticar problemas do servidor de TS. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
  "typescript.tsserver.trace": "off",

  // Ativar/desativar a atualização automática de caminhos de importação quando você renomear ou move um arquivo no VS Code. Requer o uso de TypeScript 2.9 ou mais recente na área de trabalho.
  //  - prompt: Perguntar sobre cada renomear.
  //  - always: Sempre atualize caminhos automaticamente.
  //  - never: Nunca renomeie ou solicite caminhos.
  "typescript.updateImportsOnFileMove.enabled": "prompt",

  // Habilita/Desabilita a validação TypeScript.
  "typescript.validate.enable": true

}
,
{


  // A configuração 'css.colorDecorators.enable' foi descontinuada em favor de 'editor.colorDecorators'.
  // Habilita ou desabilita os decoradores de cor.
  "css.colorDecorators.enable": true,

  // Número de parâmetros inválido.
  "css.lint.argumentsInColorFunction": "error",

  // Não utilize 'largura' ou 'altura' ao usar 'preenchimento' ou 'borda'.
  "css.lint.boxModel": "ignore",

  // Quando usando um prefixo específico do fornecedor certifique-se de incluir também todas as outras propriedades específicas do fornecedor.
  "css.lint.compatibleVendorPrefixes": "ignore",

  // Não utilize as definições de estilo duplicados.
  "css.lint.duplicateProperties": "ignore",

  // Não use conjuntos de regras vazios.
  "css.lint.emptyRules": "warning",

  // Evite usar 'float'. Floats levam a CSS frágil que é fácil de falhar se um aspecto do layout for alterado.
  "css.lint.float": "ignore",

  // Regra '@font-face' deve definir as propriedades de 'src' e 'font-family'.
  "css.lint.fontFaceProperties": "warning",

  // Cores hexadecimais devem consistir em três ou seis números hexadecimais.
  "css.lint.hexColorLength": "error",

  // Seletores não devem conter IDs, pois essas regras estão firmemente acopladas ao HTML.
  "css.lint.idSelector": "ignore",

  // IE hacks somente são necessários ao dar suporte ao IE7 e mais antigos.
  "css.lint.ieHack": "ignore",

  // Evitar o uso de 'importante!'. Isso é uma indicação de que a especificidade do CSS inteiro ficou fora de controle e precisa ser refatorado.
  "css.lint.important": "ignore",

  // Comandos de importação não carregam em paralelo.
  "css.lint.importStatement": "ignore",

  // Propriedade ignorada devido à exibição. Por exemplo, com 'display: inline', as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito
  "css.lint.propertyIgnoredDueToDisplay": "warning",

  // O seletor universal (`*`) é conhecido por ser lento
  "css.lint.universalSelector": "ignore",

  // Regra-at desconecida
  "css.lint.unknownAtRules": "warning",

  // Propriedade desconhecida.
  "css.lint.unknownProperties": "warning",

  // Propriedade específica do fornecedor desconhecida.
  "css.lint.unknownVendorSpecificProperties": "ignore",

  // A list of properties that are not validated against the `unknownProperties` rule.
  "css.lint.validProperties": [],

  // Ao usar um prefixo específico do fornecedor, também incluir a propriedade padrão
  "css.lint.vendorPrefix": "warning",

  // Nenhuma unidade para zero é necessária
  "css.lint.zeroUnits": "ignore",

  // Rastrear a comunicação entre o VS Code e o servidor de linguagem CSS.
  "css.trace.server": "off",

  // Habilita ou desabilita todas as validações.
  "css.validate": true

}
,
{


  // A configuração 'less.colorDecorators.enable' foi descontinuada em favor de 'editor.colorDecorators'.
  // Habilita ou desabilita os decoradores de cor.
  "less.colorDecorators.enable": true,

  // Número inválido de parâmetros.
  "less.lint.argumentsInColorFunction": "error",

  // Não utilize `width` ou `height` ao usar `padding` ou `border`.
  "less.lint.boxModel": "ignore",

  // Ao usar um prefixo específico de fornecedor, certifique-se de também incluir todas as outras propriedades específicas do fornecedor
  "less.lint.compatibleVendorPrefixes": "ignore",

  // Não utilize definições de estilo duplicados.
  "less.lint.duplicateProperties": "ignore",

  // Não use conjuntos de regras vazios.
  "less.lint.emptyRules": "warning",

  // Evite usar 'float'. Floats levam a CSS frágil que é fácil de falhar se um aspecto do layout for alterado.
  "less.lint.float": "ignore",

  // Regra '@font-face' deve definir as propriedades de 'src' e 'font-family'.
  "less.lint.fontFaceProperties": "warning",

  // Cores hexadecimais devem consistir em três ou seis números hexadecimais.
  "less.lint.hexColorLength": "error",

  // Seletores não devem conter IDs, pois essas regras estão firmemente acopladas ao HTML.
  "less.lint.idSelector": "ignore",

  // IE hacks somente são somente necessários ao dar suporte ao IE7 e mais antigos.
  "less.lint.ieHack": "ignore",

  // Evitar o uso de 'importante!'. Isso é uma indicação de que a especificidade do CSS inteiro ficou fora de controle e precisa ser refatorado.
  "less.lint.important": "ignore",

  // Comandos de importação não são carregados em paralelo.
  "less.lint.importStatement": "ignore",

  // Propriedade ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito
  "less.lint.propertyIgnoredDueToDisplay": "warning",

  // O seletor universal (`*`) é conhecido por ser lento.
  "less.lint.universalSelector": "ignore",

  // Propriedade desconhecida.
  "less.lint.unknownProperties": "warning",

  // Propriedade específica do fornecedor desconhecida.
  "less.lint.unknownVendorSpecificProperties": "ignore",

  // A list of properties that are not validated against the `unknownProperties` rule.
  "less.lint.validProperties": [],

  // Ao usar um prefixo específico do fornecedor, também incluir a propriedade padrão.
  "less.lint.vendorPrefix": "warning",

  // Nenhuma unidade para zero é necessária.
  "less.lint.zeroUnits": "ignore",

  // Habilita ou desabilita todas as validações.
  "less.validate": true

}
,
{


  // A configuração 'scss.colorDecorators.enable' foi descontinuada em favor de 'editor.colorDecorators'.
  // Habilita ou desabilita os decoradores de cor.
  "scss.colorDecorators.enable": true,

  // Número inválido de parâmetros.
  "scss.lint.argumentsInColorFunction": "error",

  // Não utilize `width` ou `height` ao usar `padding` ou `border`.
  "scss.lint.boxModel": "ignore",

  // Ao usar um prefixo específico de fornecedor, certifique-se de também incluir todas as outras propriedades específicas do fornecedor.
  "scss.lint.compatibleVendorPrefixes": "ignore",

  // Não utilize definições de estilo duplicadas.
  "scss.lint.duplicateProperties": "ignore",

  // Não use conjuntos de regras vazios.
  "scss.lint.emptyRules": "warning",

  // Evite usar 'float'. Floats levam a CSS frágil, fácil de quebrar se um aspecto do layout for alterado.
  "scss.lint.float": "ignore",

  // Regra '@font-face' deve definir as propriedades de 'src' e 'font-family'.
  "scss.lint.fontFaceProperties": "warning",

  // Cores hexadecimais devem consistir em três ou seis números hexadecimais.
  "scss.lint.hexColorLength": "error",

  // Seletores não devem conter IDs, pois essas regras estão firmemente acopladas ao HTML.
  "scss.lint.idSelector": "ignore",

  // IE hacks somente são necessários ao dar suporte ao IE7 e mais antigos.
  "scss.lint.ieHack": "ignore",

  // Evitar o uso de 'importante!'. Isso é uma indicação de que a especificidade do CSS inteiro ficou fora de controle e precisa ser refatorado.
  "scss.lint.important": "ignore",

  // Comandos de importação não são carregados em paralelo.
  "scss.lint.importStatement": "ignore",

  // Propriedade ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito
  "scss.lint.propertyIgnoredDueToDisplay": "warning",

  // O seletor universal (`*`) é conhecido por ser lento
  "scss.lint.universalSelector": "ignore",

  // Propriedade desconhecida.
  "scss.lint.unknownProperties": "warning",

  // Propriedade específica do fornecedor desconhecida.
  "scss.lint.unknownVendorSpecificProperties": "ignore",

  // A list of properties that are not validated against the `unknownProperties` rule.
  "scss.lint.validProperties": [],

  // Ao usar um prefixo específico do fornecedor, também incluir a propriedade padrão
  "scss.lint.vendorPrefix": "warning",

  // Nenhuma unidade para zero é necessária.
  "scss.lint.zeroUnits": "ignore",

  // Habilita ou desabilita todas as validações.
  "scss.validate": true

}
,
{


  // When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service.
  "extensions.autoCheckUpdates": true,

  // When enabled, automatically installs updates for extensions. The updates are fetched from a Microsoft online service.
  "extensions.autoUpdate": true,

  // When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.
  "extensions.closeExtensionDetailsOnViewChange": false,

  // When enabled, the notifications for extension recommendations will not be shown.
  "extensions.ignoreRecommendations": false,

  // When enabled, recommendations will not be fetched or shown unless specifically requested by the user. Some recommendations are fetched from a Microsoft online service.
  "extensions.showRecommendationsOnlyOnDemand": false

}
,
{


  // Personaliza o tipo de terminal para executar.
  //  - integrated: Use o terminal integrado do VS Code.
  //  - external: Use o terminal externo configurado.
  "terminal.explorerKind": "integrated",

  // Personalizar qual terminal executar no Linux.
  "terminal.external.linuxExec": "xterm",

  // Personaliza qual o aplicativo de terminal que será executado no macOS.
  "terminal.external.osxExec": "Terminal.app",

  // Personalizar qual terminal executar no Windows.
  "terminal.external.windowsExec": "C:\\WINDOWS\\System32\\cmd.exe"

}
,
{


  // Um conjunto de IDs de comando, cujas combinações de teclas não serão enviadas para o shell e sempre serão tratadas por código. Isto permite o uso de combinações de teclas que normalmente seriam consumidas pelo shell para agir da mesma forma quando o terminal não é focado, por exemplo ctrl+p para Execução Rápida.
  "terminal.integrated.commandsToSkipShell": [
    "editor.action.toggleTabFocusMode",
    "workbench.action.debug.continue",
    "workbench.action.debug.pause",
    "workbench.action.debug.restart",
    "workbench.action.debug.run",
    "workbench.action.debug.start",
    "workbench.action.debug.stepInto",
    "workbench.action.debug.stepOut",
    "workbench.action.debug.stepOver",
    "workbench.action.debug.stop",
    "workbench.action.firstEditorInGroup",
    "workbench.action.focusActiveEditorGroup",
    "workbench.action.focusEighthEditorGroup",
    "workbench.action.focusFifthEditorGroup",
    "workbench.action.focusFirstEditorGroup",
    "workbench.action.focusFourthEditorGroup",
    "workbench.action.focusLastEditorGroup",
    "workbench.action.focusSecondEditorGroup",
    "workbench.action.focusSeventhEditorGroup",
    "workbench.action.focusSixthEditorGroup",
    "workbench.action.focusThirdEditorGroup",
    "workbench.action.lastEditorInGroup",
    "workbench.action.navigateDown",
    "workbench.action.navigateLeft",
    "workbench.action.navigateRight",
    "workbench.action.navigateUp",
    "workbench.action.openNextRecentlyUsedEditorInGroup",
    "workbench.action.openPreviousRecentlyUsedEditorInGroup",
    "workbench.action.quickOpen",
    "workbench.action.quickOpenPreviousEditor",
    "workbench.action.quickOpenView",
    "workbench.action.showCommands",
    "workbench.action.tasks.build",
    "workbench.action.tasks.restartTask",
    "workbench.action.tasks.runTask",
    "workbench.action.tasks.showLog",
    "workbench.action.tasks.showTasks",
    "workbench.action.tasks.terminate",
    "workbench.action.tasks.test",
    "workbench.action.terminal.clear",
    "workbench.action.terminal.clearSelection",
    "workbench.action.terminal.copySelection",
    "workbench.action.terminal.deleteToLineStart",
    "workbench.action.terminal.deleteWordLeft",
    "workbench.action.terminal.deleteWordRight",
    "workbench.action.terminal.findNextTerminalFocus",
    "workbench.action.terminal.findPreviousTerminalFocus",
    "workbench.action.terminal.focus",
    "workbench.action.terminal.focusAtIndex1",
    "workbench.action.terminal.focusAtIndex2",
    "workbench.action.terminal.focusAtIndex3",
    "workbench.action.terminal.focusAtIndex4",
    "workbench.action.terminal.focusAtIndex5",
    "workbench.action.terminal.focusAtIndex6",
    "workbench.action.terminal.focusAtIndex7",
    "workbench.action.terminal.focusAtIndex8",
    "workbench.action.terminal.focusAtIndex9",
    "workbench.action.terminal.focusFindWidget",
    "workbench.action.terminal.focusNext",
    "workbench.action.terminal.focusNextPane",
    "workbench.action.terminal.focusPrevious",
    "workbench.action.terminal.focusPreviousPane",
    "workbench.action.terminal.hideFindWidget",
    "workbench.action.terminal.kill",
    "workbench.action.terminal.moveToLineEnd",
    "workbench.action.terminal.moveToLineStart",
    "workbench.action.terminal.new",
    "workbench.action.terminal.newInActiveWorkspace",
    "workbench.action.terminal.paste",
    "workbench.action.terminal.resizePaneDown",
    "workbench.action.terminal.resizePaneLeft",
    "workbench.action.terminal.resizePaneRight",
    "workbench.action.terminal.resizePaneUp",
    "workbench.action.terminal.runActiveFile",
    "workbench.action.terminal.runSelectedText",
    "workbench.action.terminal.scrollDown",
    "workbench.action.terminal.scrollDownPage",
    "workbench.action.terminal.scrollToBottom",
    "workbench.action.terminal.scrollToNextCommand",
    "workbench.action.terminal.scrollToPreviousCommand",
    "workbench.action.terminal.scrollToTop",
    "workbench.action.terminal.scrollUp",
    "workbench.action.terminal.scrollUpPage",
    "workbench.action.terminal.selectAll",
    "workbench.action.terminal.selectToNextCommand",
    "workbench.action.terminal.selectToNextLine",
    "workbench.action.terminal.selectToPreviousCommand",
    "workbench.action.terminal.selectToPreviousLine",
    "workbench.action.terminal.sendSequence",
    "workbench.action.terminal.split",
    "workbench.action.terminal.splitInActiveWorkspace",
    "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
    "workbench.action.terminal.toggleFindRegexTerminalFocus",
    "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
    "workbench.action.terminal.toggleTerminal",
    "workbench.action.toggleFullScreen",
    "workbench.action.toggleMaximizedPanel",
    "workbench.action.togglePanel"
  ],

  // Controls whether to confirm on exit if there are active terminal sessions.
  "terminal.integrated.confirmOnExit": false,

  // Controls whether text selected in the terminal will be copied to the clipboard.
  "terminal.integrated.copyOnSelection": false,

  // Controla se o cursor do terminal pisca.
  "terminal.integrated.cursorBlinking": false,

  // Controla o estilo do cursor do terminal.
  "terminal.integrated.cursorStyle": "block",

  // Um caminho de início explícito onde o terminal será lançado, isso é usado como o diretório de trabalho atual (cwd) para o processo shell. Isto pode ser particularmente útil em configurações de espaço de trabalho se o diretório raiz não é um cwd conveniente.
  "terminal.integrated.cwd": "",

  // Controls whether bold text in the terminal will always use the "bright" ANSI color variant.
  "terminal.integrated.drawBoldTextInBrightColors": true,

  // Controls whether the terminal bell is enabled.
  "terminal.integrated.enableBell": false,

  // Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.
  "terminal.integrated.env.linux": {},

  // Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.
  "terminal.integrated.env.osx": {},

  // Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.
  "terminal.integrated.env.windows": {},

  // Controls the terminal's internal buffer implementation. This setting is picked up on terminal creation and will not apply to existing terminals.
  "terminal.integrated.experimentalBufferImpl": "JsArray",

  // Controls the font family of the terminal, this defaults to `editor.fontFamily`'s value.
  "terminal.integrated.fontFamily": "",

  // Controla o tamanho da fonte em pixels do terminal.
  "terminal.integrated.fontSize": 14,

  // A espessura da fonte a usar no terminal para textos não-negritos.
  "terminal.integrated.fontWeight": "normal",

  // A espessura da fonte a ser usada no terminal para texto em negrito.
  "terminal.integrated.fontWeightBold": "bold",

  // Controla o espaçamento de letra do terminal, este é um valor inteiro que representa a quantidade de pixels adicionais a serem adicionados entre caracteres.
  "terminal.integrated.letterSpacing": 0,

  // Controla a altura da linha do terminal, este número é multiplicado pelo tamanho da fonte do terminal para obter a altura real da linha em pixels.
  "terminal.integrated.lineHeight": 1,

  // Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.
  "terminal.integrated.macOptionClickForcesSelection": false,

  // Controls whether to treat the option key as the meta key in the terminal on macOS.
  "terminal.integrated.macOptionIsMeta": false,

  // Controls how the terminal is rendered.
  //  - auto: Let VS Code guess which renderer to use.
  //  - canvas: Use the standard GPU/canvas-based renderer
  //  - dom: Use the fallback DOM-based renderer.
  "terminal.integrated.rendererType": "auto",

  // Controla como o terminal reage a cliques com o botão direito.
  //  - default: Show the context menu.
  //  - copyPaste: Copy when there is a selection, otherwise paste.
  //  - selectWord: Select the word under the cursor and show the context menu.
  "terminal.integrated.rightClickBehavior": "copyPaste",

  // Controla a quantidade máxima de linhas que o terminal mantém em seu buffer.
  "terminal.integrated.scrollback": 1000,

  // Controls whether locale variables are set at startup of the terminal, this defaults to `true` on macOS, `false` on other platforms.
  "terminal.integrated.setLocaleVariables": false,

  // O caminho do shell que o terminal utiliza no Linux. [Leia mais sobre como configurar o shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shell.linux": "sh",

  // O caminho do shell que o terminal usa no macOS. [Leia mais sobre como configurar o shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shell.osx": "sh",

  // O caminho do shell que o terminal usa no Windows. [Leia mais sobre como configurar o shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",

  // Os argumentos de linha de comando para usar no terminal do Linux. [Leia mais sobre como configurar o shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shellArgs.linux": [],

  // Os argumentos de linha de comando a serem utilizados no terminal do macOS. [Leia mais sobre como configurar o shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shellArgs.osx": [
    "-l"
  ],

  // The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).
  "terminal.integrated.shellArgs.windows": [],

  // Controls whether to show the alert "The terminal process terminated with exit code" when exit code is non-zero.
  "terminal.integrated.showExitAlert": true,

  // Controls the working directory a split terminal starts with.
  //  - workspaceRoot: A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.
  //  - initial: A new split terminal will use the working directory that the parent terminal started with.
  //  - inherited: On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial.
  "terminal.integrated.splitCwd": "inherited"

}
,
{


  // Controla se a visualização de problemas deve revelar os arquivos automaticamente ao abri-los.
  "problems.autoReveal": true,

  // Mostrar Erros e Avisos em arquivos e pasta.
  "problems.decorations.enabled": true

}
,
{


  // Ativar / desativar os breadcrumbs de navegação
  "breadcrumbs.enabled": false,

  // Controls whether and how file paths are shown in the breadcrumbs view.
  //  - on: Show the file path in the breadcrumbs view.
  //  - off: Não mostre o caminho do arquivo na visualização de trilha.
  //  - last: Mostrar apenas o último elemento do caminho do arquivo na visualização de trilhas.
  "breadcrumbs.filePath": "on",

  // Controls whether and how symbols are shown in the breadcrumbs view.
  //  - on: Mostrar todos os símbolos na exibição de breadcrumbs.
  //  - off: Não mostre símbolos na exibição de breadcrumbs.
  //  - last: Mostrar apenas o símbolo atual na exibição de breadcrumbs.
  "breadcrumbs.symbolPath": "on",

  // Controls how symbols are sorted in the breadcrumbs outline view.
  //  - position: Show symbol outline in file position order.
  //  - name: Show symbol outline in alphabetical order.
  //  - type: Show symbol outline in symbol type order.
  "breadcrumbs.symbolSortOrder": "position"

}
,
{


  // Habilitar relatório de indidentes a serem enviados para um serviço online.
  // Esta opção requer reinicialização para ser efetivada.
  "telemetry.enableCrashReporter": true,

  // Permite que os dados de uso e erros sejam enviados para um serviço online da Microsoft.
  "telemetry.enableTelemetry": true

}
,
{


  // Renderizar elementos de contorno com ícones.
  "outline.icons": true,

  // Use emblemas para erros e avisos.
  "outline.problems.badges": true,

  // Use cores para erros e avisos.
  "outline.problems.colors": true,

  // Mostre erros e avisos no elementos de contorno.
  "outline.problems.enabled": true

}
,
{


  // Controla se a envio por push forçado (com ou sem locação) está habilitado.
  "git.allowForcePush": false,

  // Sempre mostrar o grupo de recursos Staged Changes.
  "git.alwaysShowStagedChangesResourceGroup": false,

  // Controla a flag de signoff para todas as confirmações.
  "git.alwaysSignOff": false,

  // When enabled, commits will automatically be fetched from the default remote of the current Git repository.
  "git.autofetch": false,

  // Se a atualização automática estiver habilitada.
  "git.autorefresh": true,

  // Configura-se quando repositórios devem ser automaticamente detectados.
  //  - true: Digitalizar para ambas as subpastas da pasta atual aberta e pastas pai de arquivos abertos.
  //  - false: Desative a varredura automática de repositórios.
  //  - subFolders: Digitalizar para subpastas da pasta aberta atualmente.
  //  - openEditors: Procure pastas pai de arquivos abertos.
  "git.autoRepositoryDetection": true,

  // Uma expressão regular para validar novos nomes do ramo.
  "git.branchValidationRegex": "",

  // O caractere para substituir o espaço em branco em novos nomes do ramo.
  "git.branchWhitespaceChar": "-",

  // Controla os tipos de ramos que são listados ao executar `Checkout para...`.
  //  - all: Mostrar todas as referências.
  //  - local: Mostrar somente os ramos locais.
  //  - tags: Mostrar somente as marcas.
  //  - remote: Mostrar somente os ramos remotos.
  "git.checkoutType": "all",

  // Sempre confirme a criação de commits vazios.
  "git.confirmEmptyCommits": true,

  // Controla se deve solicitar confirmação antes de um envio por push forçado.
  "git.confirmForcePush": true,

  // Confirmar antes de sincronizar repositórios git.
  "git.confirmSync": true,

  // Controla o contador de distintivos do git.
  //  - all: Contar todas as alterações.
  //  - tracked: Contar apenas alterações controladas.
  //  - off: Desligar o contador.
  "git.countBadge": "all",

  // Controla se o Git contribui com cores e emblemas para o explorer e para a visualização de editores abertos.
  "git.decorations.enabled": true,

  // O local padrão para clonar um repositório git.
  "git.defaultCloneDirectory": null,

  // Controla se deve detectar automaticamente os sub-módulos do git.
  "git.detectSubmodules": true,

  // Controla o limite de sub-módulos git detectados.
  "git.detectSubmodulesLimit": 10,

  // Ativa a assinatura de confirmações usando GPG.
  "git.enableCommitSigning": false,

  // Se o git está habilitado.
  "git.enabled": true,

  // Confirma todas as alterações quando não há nenhuma alteração estagiada.
  "git.enableSmartCommit": false,

  // Buscar por todos os branches ao executar o comando pull ou apenas o atual.
  "git.fetchOnPull": false,

  // Lista de repositórios git para ignorar.
  "git.ignoredRepositories": [],

  // Ignora o aviso de Git legado.
  "git.ignoreLegacyWarning": false,

  // Ignora o aviso quando houver muitas alterações em um repositório.
  "git.ignoreLimitWarning": false,

  // Ignora o aviso quando o Git estiver faltando.
  "git.ignoreMissingGitWarning": false,

  // Controla quando exibir validação do campo de mensagem do commit.
  "git.inputValidation": "warn",

  // Controla o limite de comprimento de mensagem de confirmação ao  mostrar um aviso.
  "git.inputValidationLength": 72,

  // Caminho e nome do arquivo do git executável, por exemplo, 'C:\Program Files\Git\bin\git.exe' (Windows).
  "git.path": null,

  // Controla se o Git deve verificar arquivos não salvos antes do Commit.
  "git.promptToSaveFilesBeforeCommit": false,

  // Force git to use rebase when running the sync command.
  "git.rebaseWhenSync": false,

  // Lista de caminhos onde pesquisar repositórios git.
  "git.scanRepositories": [],

  // Controla se deve mostrar uma ação Abrir Arquivo em linha na visualização de alterações do Git.
  "git.showInlineOpenFileAction": true,

  // Controla se as ações do git devem mostrar progresso.
  "git.showProgress": true,

  // Controla se mostra uma notificação quando um push for bem sucedido.
  "git.showPushSuccessNotification": false,

  // Controles se o envio por push forçado usa a variante forçado-com-locação mais segura.
  "git.useForcePushWithLease": true

}
,
{


  // Always show rule failures as warnings, independent of the tslint configuration.
  "tslint.alwaysShowRuleFailuresAsWarnings": false,

  // Always show the TSlint status bar item, not only when there are errors or warnings.
  "tslint.alwaysShowStatus": false,

  // Turns auto fix on save on or off, or defines which rules (e.g. `no-var-keyword`) to auto fix on save.
  "tslint.autoFixOnSave": false,

  // The path to the rules configuration file
  "tslint.configFile": "",

  // Control whether tslint is enabled for TypeScript files or not.
  "tslint.enable": true,

  // Configure glob patterns of file paths to exclude from linting
  "tslint.exclude": "",

  // Control if TypeScript definition files should be ignored
  "tslint.ignoreDefinitionFiles": true,

  // Control whether tslint is enabled for JavaScript files or not.
  "tslint.jsEnable": false,

  // A path added to NODE_PATH when resolving the tslint module.
  "tslint.nodePath": "",

  // The package manager to use to locate the tslint module.
  "tslint.packageManager": "npm",

  // An additional rules directory
  "tslint.rulesDirectory": "",

  // Run the linter on save (onSave) or on type (onType)
  "tslint.run": "onType",

  // Traces the communication between VSCode and the tslint linter service.
  "tslint.trace.server": "off",

  // Validate a file when there is only a default tslint configuration is found
  "tslint.validateWithDefaultConfig": false

}
,
{


  // Definir que configurações do editor sejam substituídas para idioma [git-commit].
  "[git-commit]":  {
    "editor.rulers": [
        72
    ]
  },

  // Definir que configurações do editor sejam substituídas para idioma [go].
  "[go]":  {
    "editor.insertSpaces": false
  },

  // Definir que configurações do editor sejam substituídas para idioma [json].
  "[json]":  {
    "editor.quickSuggestions": {
        "strings": true
    }
  },

  // Definir que configurações do editor sejam substituídas para idioma [makefile].
  "[makefile]":  {
    "editor.insertSpaces": false
  },

  // Definir que configurações do editor sejam substituídas para idioma [markdown].
  "[markdown]":  {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": false
  },

  // Definir que configurações do editor sejam substituídas para idioma [yaml].
  "[yaml]":  {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": false
  }

}
,
{


  // npm bin name
  "npm.bin": "npm",

  // Look for 'package.json' files in these directories
  "npm.includeDirectories": [],

  // Run npm commands in a terminal, otherwise shows the output in the output panel
  "npm.runInTerminal": true,

  // Look for 'package.json' in the root directory of the workspace
  "npm.useRootDirectory": true,

  // Validate installed modules
  "npm.validate.enable": true

}
,
{


  // Controla se a detecção automática de tarefas Jake está ativada ou desativada. Por padrão, é ativado.
  "jake.autoDetect": "on"

}
,
{


  // Set the languages that the extension will be activated.  e.g. ["html","xml","php"] By default, it is ["*"] and will be activated for all languages.
  "auto-rename-tag.activationOnLanguage": [
    "*"
  ]

}
,
{


  // Controla se a deteção automática de tarefas do Grunt está ligado ou desligado. Padrão é ligado.
  "grunt.autoDetect": "on"

}
,
{


  // Options that are passed into pug compile function
  "pug2html.compileOptions": {
    "doctype": "html",
    "pretty": true
  },

  // Path to a json or js file that exports compile options
  "pug2html.compileOptionsPath": null

}
,
{


  // Controla se os scripts de npm devem ser detectados automaticamente.
  "npm.autoDetect": "on",

  // Ativar uma visualização do explorador para scripts npm.
  "npm.enableScriptExplorer": false,

  // Configure padrões glob para pastas que devem ser excluídos da detecção automática de script.
  "npm.exclude": "",

  // Buscar dados de https://registry.npmjs/org e https://registry.bower.io para fornecer informações de preenchimento automático e sobre os recursos nas dependências do npm.
  "npm.fetchOnlinePackageInfo": true,

  // O Gerenciador de pacotes usado para executar scripts.
  "npm.packageManager": "npm",

  // Executar comandos npm com a opção '--silent'.
  "npm.runSilent": false,

  // A ação padrao do clique usado no explorador de scripts: 'abrir' ou 'executar'. O padrão é 'abrir'.
  "npm.scriptExplorerAction": "open"

}
,
{


  // A path to a file, or an object containing the configuration options for js-beautify. If the .jsbeautifyrc file exists in project root, it overrides this configuration.
  "beautify.config": null,

  // List of paths to ignore when using VS Code format command, including format on save. Uses glob pattern matching.
  "beautify.ignore": [],

  // Link file types to the beautifier type
  "beautify.language": {
    "js": {
      "type": [
        "javascript",
        "json",
        "jsonc"
      ],
      "filename": [
        ".jshintrc",
        ".jsbeautifyrc"
      ]
    },
    "css": [
      "css",
      "scss"
    ],
    "html": [
      "htm",
      "html"
    ]
  }

}
,
{


  // Anexar automaticamente ao depurador do Node caso o Node.js tenha sido iniciado em modo de depuração no terminal integrado. 
  //  - disabled: A anexação automática está desativada e não é mostrada na barra de status. 
  //  - on: A anexação automática está ativada. 
  //  - off: A anexação automática está desativada. 
  "debug.node.autoAttach": "disabled"

}
,
{


  // Enables the trailing slash on the folder path insertion.
  "path-autocomplete.enableFolderTrailingSlash": true,

  // Allows you to exclude certain files from the suggestions.
  "path-autocomplete.excludedItems": {},

  // Adds the extension when inserting file on import statements.
  "path-autocomplete.extensionOnImport": false,

  // Glob patterns for disabling the path completion in the specified file types.
  "path-autocomplete.ignoredFilesPattern": "",

  // Adds the extension when inserting file names.
  "path-autocomplete.includeExtension": true,

  // Defines custom mappings for the autocomplete paths.
  "path-autocomplete.pathMappings": {},

  // Defines the separators for support outside string.
  "path-autocomplete.pathSeparators": " \t({[",

  // Custom transformations applied to the inserted text.
  "path-autocomplete.transformations": [],

  // Enables path autocompletion outside strings.
  "path-autocomplete.triggerOutsideStrings": false,

  // If enabled it will use backslash (\) as a path separator.
  "path-autocomplete.useBackslash": false

}
,
{


  // 1: Disable GPU / 0: System default / -1: Auto
  "colorHelper.disableGpu": -1,

  // Disable drop shadow effect.
  "colorHelper.disableShadow": false,

  // Disable transparent window.
  "colorHelper.disableTransparent": false,

  // An array that indicates the order of formats in UI (e.g. drop-down list). Allowed items are "hsb", "hsl", "hwb", "rgb", "hex", "named", "cmyk" or "gray". This array doesn't have to contain all formats. The formats that are not contained in the array are moved to the top of the list in UI automatically when it was used. If you want to make the list static, specify all formats in the order you desire, e.g. ["hsb", "hsl", "hwb", "rgb", "hex", "named", "cmyk", "gray"].
  "colorHelper.formatsOrder": [],

  // A name of preset package that switches UI and features. Allowed values are "default", "largePalette", "simple", "compact", "compact2" or "byPalette".
  "colorHelper.pickerForm": "default",

  // Stands by for a quick response. After the dialog box is opened, it stays in memory even after it is closed until VS Code is exited (or VS Code might unload it).
  "colorHelper.resident": false,

  // A path to directory that contains your color palettes. For information about color palettes, see `README.md` that is found in that directory.
  "colorHelper.storeDir": ""

}
,
{


  // Tab Size
  "beautify.options": {},

  // Tab Size
  "beautify.tabSize": 0

}
,
{


  // For import command. The declaration type used for require()
  "npm-intellisense.importDeclarationType": "const",

  // For import command. Use import statements instead of require()
  "npm-intellisense.importES6": true,

  // For import command. The linebreak used after the snippet
  "npm-intellisense.importLinebreak": ";\r\n",

  // For import command. The type of quotes to use in the snippet
  "npm-intellisense.importQuotes": "'",

  // (experimental) Enables path intellisense in subfolders of modules
  "npm-intellisense.packageSubfoldersIntellisense": false,

  // Look for package.json inside nearest directory instead of workspace root
  "npm-intellisense.recursivePackageJsonLookup": true,

  // Scans devDependencies as well
  "npm-intellisense.scanDevDependencies": false,

  // shows build in node modules like 'path' of 'fs'
  "npm-intellisense.showBuildInLibs": false

}
,
{


  // Adds found items to intellisense and automatically imports then
  "autoimport.autoComplete": true,

  // Specifies wether to use double quotes
  "autoimport.doubleQuotes": false,

  // Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}
  "autoimport.filesToScan": "${workspaceRoot}/**/*.{js,jsx,ts,tsx}",

  // Specifies wether to show notifications from Auto Import
  "autoimport.showNotifications": false,

  // Specifies wether to use spaces between first and last brace
  "autoimport.spaceBetweenBraces": true

}
,
{


  // CSS for the active scope. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used
  "bracketPairColorizer.activeScopeCSS": [
    "borderStyle : solid",
    "borderWidth : 1px",
    "borderColor : {color}; opacity: 0.5"
  ],

  // Should different brackets share a color group (Consecutive), or use their own color group (Independent)
  "bracketPairColorizer.colorMode": "Consecutive",

  // Define paired characters and their shared color group
  "bracketPairColorizer.consecutivePairColors": [
    "()",
    "[]",
    "{}",
    [
      "Gold",
      "Orchid",
      "LightSkyBlue"
    ],
    "Red"
  ],

  // Don't colorize files of these languages
  "bracketPairColorizer.excludedLanguages": [],

  // Should opening brackets iterate the color cycle even if they are not nested
  "bracketPairColorizer.forceIterationColorCycle": false,

  // Ensure that an opening brackets color does not match a previous brackets color
  "bracketPairColorizer.forceUniqueOpeningColor": false,

  // Should the active scope brackets always be highlighted? Recommended to disable editor.matchBrackets if using this feature.
  "bracketPairColorizer.highlightActiveScope": false,

  // Define paired characters and their color groups
  "bracketPairColorizer.independentPairColors": [
    [
      "()",
      [
        "Gold",
        "Orchid",
        "LightSkyBlue"
      ],
      "Red"
    ],
    [
      "[]",
      [
        "Gold",
        "Orchid",
        "LightSkyBlue"
      ],
      "Red"
    ],
    [
      "{}",
      [
        "Gold",
        "Orchid",
        "LightSkyBlue"
      ],
      "Red"
    ]
  ],

  // Show active bracket scope in ruler?
  "bracketPairColorizer.rulerPosition": "Center",

  // CSS for the scope line. Use {color} to match the bracket color. The string types listed at https://code.visualstudio.com/docs/extensionAPI/vscode-api#DecorationRenderOptions can be used
  "bracketPairColorizer.scopeLineCSS": [
    "borderStyle : solid",
    "borderWidth : 1px",
    "borderColor : {color}; opacity: 0.5"
  ],

  // True: Scope Line will start from the ending bracket position. False: Scope Line will always be at column 0
  "bracketPairColorizer.scopeLineRelativePosition": true,

  // Show active bracket scope in gutter?
  "bracketPairColorizer.showBracketsInGutter": false,

  // Show active bracket scope in ruler?
  "bracketPairColorizer.showBracketsInRuler": false,

  // Show a horizontal line to create a block around the active bracket scope?
  "bracketPairColorizer.showHorizontalScopeLine": true,

  // Show a vertical line on the left side of the editor representing the active bracket scope?
  "bracketPairColorizer.showVerticalScopeLine": true,

  // How long the user should idle for, before the document is colorized. Set to 0 to disable
  "bracketPairColorizer.timeOut": 200

}
,
{


  // Indent with Tabs, if false, with spaces.
  "pugbeautify.fillTab": null,

  // Omit div tag when it has id or class.
  "pugbeautify.omitDiv": false,

  // When `fillTab` is false, fill `tabSize` spaces.
  "pugbeautify.tabSize": null

}
,
{


  // Uses the legacy module resolving.
  "eslint._legacyModuleResolve": false,

  // Always show the ESlint status bar item.
  "eslint.alwaysShowStatus": false,

  // Turns auto fix on save on or off.
  "eslint.autoFixOnSave": false,

  // Controls whether eslint is enabled for JavaScript files or not.
  "eslint.enable": true,

  // A path added to NODE_PATH when resolving the eslint module.
  "eslint.nodePath": null,

  // The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine).
  "eslint.options": {},

  // The package manager you use to install node modules.
  "eslint.packageManager": "npm",

  // Controls whether a task for linting the whole workspace will be available.
  "eslint.provideLintTask": false,

  // Run the linter on save (onSave) or on type (onType)
  "eslint.run": "onType",

  // The location of the node binary to run ESLint under.
  "eslint.runtime": null,

  // Traces the communication between VSCode and the eslint linter service.
  "eslint.trace.server": "off",

  // An array of language ids which should be validated by ESLint
  "eslint.validate": [
    "javascript",
    "javascriptreact"
  ],

  // 
  "eslint.workingDirectories": []

}
,
{


  // Enable/disable default C# formatter (requires restart).
  "csharp.format.enable": true,

  // Specifies whether the references CodeLens should be show be shown.
  "csharp.referencesCodeLens.enabled": true,

  // Suppress the warning that the .NET CLI is not on the path.
  "csharp.suppressDotnetInstallWarning": false,

  // Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved.
  "csharp.suppressDotnetRestoreNotification": false,

  // Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane.
  "csharp.suppressHiddenDiagnostics": true,

  // Suppress the warning that project.json is no longer a supported project format for .NET Core applications
  "csharp.suppressProjectJsonWarning": false,

  // Specifies whether the run and debug test CodeLens should be show be shown.
  "csharp.testsCodeLens.enabled": true,

  // Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.
  "csharp.unitTestDebuggingOptions": {},

  // Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command
  "omnisharp.autoStart": true,

  // The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen.
  "omnisharp.defaultLaunchSolution": null,

  // Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log
  "omnisharp.disableMSBuildDiagnosticWarning": false,

  // Specifies the level of logging output from the OmniSharp server.
  "omnisharp.loggingLevel": "information",

  // The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here.
  "omnisharp.maxFindSymbolsItems": 1000,

  // The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250).
  "omnisharp.maxProjectResults": 250,

  // The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results.
  "omnisharp.minFindSymbolsFilterLength": 0,

  // Specifies the path to a mono installation to use when "useGlobalMono" is set to "always" or "auto", instead of the default system one.
  "omnisharp.monoPath": null,

  // Specifies the path to OmniSharp. This can be the absolute path to an OmniSharp executable, a specific version number, or "latest". If a version number or "latest" is specified, the appropriate version of OmniSharp will be downloaded on your behalf.
  "omnisharp.path": null,

  // The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds.
  "omnisharp.projectLoadTimeout": 60,

  // Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size).
  "omnisharp.useEditorFormattingSettings": true,

  // Launch OmniSharp with the globally-installed Mono. If set to "always", "mono" version 5.8.1 or greater must be available on the PATH. If set to "auto", OmniSharp will be launched with "mono" if version 5.8.1 or greater is available on the PATH.
  //  - auto: Automatically launch OmniSharp with "mono" if version 5.8.1 or greater is available on the PATH.
  //  - always: Always launch OmniSharp with "mono". If version 5.8.1 or greater is not available on the PATH, an error will be printed.
  //  - never: Never launch OmniSharp on a globally-installed Mono.
  "omnisharp.useGlobalMono": "auto",

  // Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached.
  "omnisharp.waitForDebugger": false,

  // Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving.
  "razor.devmode": false,

  // Specifies whether to disable Razor language features.
  "razor.disabled": false,

  // Specifies whether to wait for debug attach when launching the language server.
  "razor.languageServer.debug": false,

  // Overrides the path to the Razor Language Server directory.
  "razor.languageServer.directory": null,

  // Overrides the path to the Razor plugin dll.
  "razor.plugin.path": null,

  // Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off].
  //  - Off: Does not log messages from the Razor extension
  //  - Messages: Logs only some messages from the Razor extension
  //  - Verbose: Logs all messages from the Razor extension
  "razor.trace": "Off"

}
,
{


  // Whether to automatically navigate to the next merge conflict after resolving a merge conflict.
  "merge-conflict.autoNavigateNextConflict.enabled": false,

  // Crie um código de lente para blocos de conflitos de mesclagem dentro do editor.
  "merge-conflict.codeLens.enabled": true,

  // Crie decoradores para blocos de conflitos de mesclagem dentro do editor.
  "merge-conflict.decorators.enabled": true

}
,
{


  // Settings specific to CSS minification. Tool tips and completion are provided when editing your settings.
  "minify.css": {
    "advanced": true,
    "aggressiveMerging": true,
    "compatibility": "*",
    "inliner": {},
    "keepBreaks": false,
    "keepSpecialComments": "*",
    "mediaMerging": true,
    "processImport": true,
    "processImportFrom": [
      "all"
    ],
    "rebase": true,
    "restructuring": true,
    "root": "${workspaceRoot}",
    "roundingPrecision": 2,
    "semanticMerging": false,
    "shorthandCompacting": true
  },

  // Settings specific to HTML minification. Tool tips and completion are provided when editing your settings.
  "minify.html": {
    "caseSensitive": false,
    "collapseBooleanAttributes": true,
    "collapseInlineTagWhitespace": false,
    "collapseWhitespace": true,
    "conservativeCollapse": false,
    "customAttrAssign": [],
    "customAttrCollapse": "",
    "customAttrSurround": [],
    "customEventAttributes": [
      "^on[a-z]{3,}$"
    ],
    "decodeEntities": false,
    "html5": true,
    "ignoreCustomComments": [
      "^!"
    ],
    "ignoreCustomFragments": [
      "<%[\\s\\S]*?%>",
      "<\\?[\\s\\S]*?\\?>"
    ],
    "includeAutoGeneratedTags": true,
    "keepClosingSlash": false,
    "maxLineLength": false,
    "minifyCSS": true,
    "minifyJS": true,
    "minifyURLs": false,
    "preserveLineBreaks": false,
    "preventAttributesEscaping": false,
    "processConditionalComments": false,
    "processScripts": [],
    "quoteCharacter": "\"",
    "removeAttributeQuotes": false,
    "removeComments": false,
    "removeEmptyAttributes": false,
    "removeEmptyElements": false,
    "removeOptionalTags": false,
    "removeRedundantAttributes": false,
    "removeScriptTypeAttributes": false,
    "removeStyleLinkTypeAttributes": false,
    "sortAttributes": false,
    "sortClassName": false,
    "trimCustomFragments": false,
    "useShortDoctype": false
  },

  // Settings specific to Javascript minification. Tool tips and completion are provided when editing your settings.
  "minify.js": {
    "mangle": true,
    "compress": {
      "sequences": true,
      "properties": true,
      "dead_code": true,
      "drop_debugger": true,
      "unsafe": false,
      "unsafe_comps": false,
      "conditionals": true,
      "comparisons": true,
      "evaluate": true,
      "booleans": true,
      "loops": true,
      "unused": true,
      "hoist_funs": true,
      "keep_fargs": true,
      "keep_fnames": false,
      "hoist_vars": false,
      "if_return": true,
      "join_vars": true,
      "collapse_vars": false,
      "reduce_vars": false,
      "cascade": true,
      "side_effects": true,
      "pure_getters": false,
      "pure_funcs": null,
      "negate_iife": false,
      "drop_console": false,
      "passes": 1,
      "global_defs": {}
    },
    "output": {
      "ascii_only": false,
      "inline_script": false,
      "max_line_len": 32000,
      "bracketize": false,
      "semicolons": true,
      "comments": false,
      "shebang": true,
      "preamble": null,
      "quote_style": "best"
    }
  },

  // Minify file on save if a related (.min.[ext]) file already exists. Includes directory minification/
  "minify.minifyExistingOnSave": false

}
,
{


  // Colorize Quokka output
  "quokka.colorizeOutput": true,

  // Show Quokka output window on start up
  "quokka.showOutputOnStart": true,

  // Stop Quokka expiring license update reminders
  "quokka.suppressExpirationNotifications": false

}
,
{


  // Path to local cordova/ionic executable
  "cordova.cordovaExecutable": "",

  // Environment variables passed to the program.
  "cordova.env": {},

  // Absolute path to a file containing environment variable definitions.
  "cordova.envFile": "",

  // Run arguments to be passed to 'cordova run/build <platform>' or 'ionic serve' command
  "cordova.runArguments": [],

  // Launch Cordova simulator in browser instead of tab in VS Code
  "cordova.simulatorInExternalBrowser": false

}
,
{


  // Essa configuração permitirá que você altere o ícone de arquivo padrão para temas escuros.
  "vsicons.associations.fileDefault.file": null,

  // Essa configuração permitirá que você altere o ícone de arquivo padrão para temas claros.
  "vsicons.associations.fileDefault.file_light": null,

  // Estas associações personalizadas irão substituir as associações de arquivo de ícone padrão.
  "vsicons.associations.files": [],

  // Essa configuração permitirá que você altere o ícone de pasta padrão para temas escuros.
  "vsicons.associations.folderDefault.folder": null,

  // Essa configuração permitirá que você altere o ícone de pasta padrão para temas claros.
  "vsicons.associations.folderDefault.folder_light": null,

  // Essa configuração permitirá que você alterar o ícone de pasta raiz padrão para temas escuros.
  "vsicons.associations.folderDefault.root_folder": null,

  // Essa configuração permitirá que você alterar o ícone de pasta raiz padrão para temas claros.
  "vsicons.associations.folderDefault.root_folder_light": null,

  // Estas associações personalizadas irão substituir as associações de ícone de pasta padrão.
  "vsicons.associations.folders": [],

  // O caminho físico para a pasta superior no computador local onde as pastas de ícones personalizados estão localizados.
  "vsicons.customIconFolderPath": "",

  // Se definida como true, quando alterar manualmente as configurações, a mensagem de 'reiniciar' não será mostrada.
  "vsicons.dontShowConfigManuallyChangedMessage": false,

  // Se definido como true, a mensagem de versão nova não vai ser mais mostrada.
  "vsicons.dontShowNewVersionMessage": false,

  // Se definido como true, a extensão irá corresponder alguns padrões de Angular comuns.
  "vsicons.presets.angular": false,

  // Se definido como true, todas as pastas usarão o ícone padrão da pasta.
  "vsicons.presets.foldersAllDefaultIcon": false,

  // Se definido como true, a extensão irá esconder as setas de pasta no explorador' '.
  "vsicons.presets.hideExplorerArrows": false,

  // Se definido como verdadeiro, todas as pastas serão ocultadas.
  "vsicons.presets.hideFolders": false,

  // Se definido como true, a extensão irá usar os ícones oficiais de JS.
  "vsicons.presets.jsOfficial": false,

  // Se definido como true, a extensão irá usar o ícone oficial de JSON.
  "vsicons.presets.jsonOfficial": false,

  // Se definido como true, a extensão irá usar o ícone oficial de TS.
  "vsicons.presets.tsOfficial": false,

  // Se definido como true, a extensão será reiniciada automaticamente na detecção do projeto.
  "vsicons.projectDetection.autoReload": false,

  // Se definido como true, a extensão irá desativar a detecção de projeto.
  "vsicons.projectDetection.disableDetect": false

}
,
{


  // Specifies the url of the GitHub project in which to generate bug reports.
  "powershell.bugReporting.project": "https://github.com/PowerShell/vscode-powershell",

  // Enables syntax based code folding. When disabled, the default indentation based code folding is used.
  "powershell.codeFolding.enable": true,

  // Align assignment statements in a hashtable or a DSC Configuration.
  "powershell.codeFormatting.alignPropertyValuePairs": true,

  // Does not reformat one-line code blocks, such as "if (...) {...} else {...}".
  "powershell.codeFormatting.ignoreOneLineBlock": true,

  // Adds a newline (line break) after a closing brace.
  "powershell.codeFormatting.newLineAfterCloseBrace": true,

  // Adds a newline (line break) after an open brace.
  "powershell.codeFormatting.newLineAfterOpenBrace": true,

  // Places open brace on the same line as its associated statement.
  "powershell.codeFormatting.openBraceOnSameLine": true,

  // Sets the codeformatting options to follow the given indent style in a way that is compatible with PowerShell syntax. For more information about the brace styles please refer to https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81.
  "powershell.codeFormatting.preset": "Custom",

  // Adds a space after a separator (',' and ';').
  "powershell.codeFormatting.whitespaceAfterSeparator": true,

  // Adds spaces before and after an operator ('=', '+', '-', etc.).
  "powershell.codeFormatting.whitespaceAroundOperator": true,

  // Adds a space between a keyword and its associated scriptblock expression.
  "powershell.codeFormatting.whitespaceBeforeOpenBrace": true,

  // Adds a space between a keyword (if, elseif, while, switch, etc) and its associated conditional expression.
  "powershell.codeFormatting.whitespaceBeforeOpenParen": true,

  // Determines whether a temporary PowerShell Integrated Console is created for each debugging session, useful for debugging PowerShell classes and binary modules.
  "powershell.debugging.createTemporaryIntegratedConsole": false,

  // Specifies an alternate path to the folder containing modules that are bundled with the PowerShell extension (i.e. PowerShell Editor Services, PSScriptAnalyzer, Plaster)
  "powershell.developer.bundledModulesPath": "",

  // Sets the logging verbosity level for the PowerShell Editor Services host executable.  Valid values are 'Diagnostic', 'Verbose', 'Normal', 'Warning', and 'Error'
  "powershell.developer.editorServicesLogLevel": "Normal",

  // Launches the language service with the /waitForDebugger flag to force it to wait for a .NET debugger to attach before proceeding.
  "powershell.developer.editorServicesWaitForDebugger": false,

  // An array of strings that enable experimental features in the PowerShell extension.
  "powershell.developer.featureFlags": [],

  // Indicates that the powerShellExePath points to a developer build of Windows PowerShell and configures it for development.
  "powershell.developer.powerShellExeIsWindowsDevBuild": false,

  // Deprecated. Please use the 'powershell.powerShellExePath' setting instead
  "powershell.developer.powerShellExePath": "",

  // Loads user and system-wide PowerShell profiles (profile.ps1 and Microsoft.VSCode_profile.ps1) into the PowerShell session. This affects IntelliSense and interactive script execution, but it does not affect the debugger.
  "powershell.enableProfileLoading": true,

  // Controls the comment-based help completion behavior triggered by typing '##'. Set the generated help style with 'BlockComment' or 'LineComment'. Disable the feature with 'Disabled'.
  "powershell.helpCompletion": "BlockComment",

  // Switches focus to the console when a script selection is run or a script file is debugged. This is an accessibility feature. To disable it, set to false.
  "powershell.integratedConsole.focusConsoleOnExecute": true,

  // Shows the integrated console when the PowerShell extension is initialized.
  "powershell.integratedConsole.showOnStartup": true,

  // Specifies an array of versionName / exePath pairs where exePath points to a non-standard install location for PowerShell and versionName can be used to reference this path with the powershell.powerShellDefaultVersion setting.
  "powershell.powerShellAdditionalExePaths": [],

  // Specifies the name of the PowerShell version used in the startup session when the extension loads e.g "Windows PowerShell (x86)" or "PowerShell Core 6.0.2 (x64)".
  "powershell.powerShellDefaultVersion": "",

  // Specifies the full path to a PowerShell executable. Changes the installation of PowerShell used for language and debugging services.
  "powershell.powerShellExePath": "",

  // Enables real-time script analysis from PowerShell Script Analyzer. Uses the newest installed version of the PSScriptAnalyzer module or the version bundled with this extension, if it is newer.
  "powershell.scriptAnalysis.enable": true,

  // Specifies the path to a PowerShell Script Analyzer settings file. To override the default settings for all projects, enter an absolute path, or enter a path relative to your workspace.
  "powershell.scriptAnalysis.settingsPath": "",

  // Starts PowerShell extension features automatically when a PowerShell file opens. If false, to start the extension, use the 'PowerShell: Restart Current Session' command. IntelliSense, code navigation, integrated console, code formatting, and other features are not enabled until the extension starts.
  "powershell.startAutomatically": true,

  // Uses the 32-bit language service on 64-bit Windows. This setting has no effect on 32-bit Windows or on the PowerShell extension debugger, which has its own architecture configuration.
  "powershell.useX86Host": false

}
,
{


  // set this to false when you don't want to have imports added on pasting code
  "vscode-exports-autocomplete.addImportsOnPaste": true,

  // set this to true when you prefer spaces around curly braces
  "vscode-exports-autocomplete.addSpacingAroundCurlyBraces": false,

  // size limit for the cache of parsed exports, shared among all projects
  "vscode-exports-autocomplete.cacheSizeLimit": "25MB",

  // it might be useful to disable when you have a project where you can't sacrifice performance
  "vscode-exports-autocomplete.enable": true,

  // set this to false when you're annoyed by the stuff you get from your npm modules
  "vscode-exports-autocomplete.enableNpmDependencies": true,

  // generated import statements will always be indented using this string if it is set
  "vscode-exports-autocomplete.indentationOverride": null,

  // set this to a higher value if 'on paste' is too aggressive for you
  "vscode-exports-autocomplete.minimumWordLengthToImportOnPaste": 3,

  // this allows to override the import style and force the imports to use this string as quotes
  "vscode-exports-autocomplete.quoteCharOverride": null

}
,
{


  // Uma matriz de línguas onde abreviaturas Emmet não devem ser expandidas.
  "emmet.excludeLanguages": [
    "markdown"
  ],

  // Caminho para uma pasta que contém os perfis Emmet e trechos de códigos.
  // 
  "emmet.extensionsPath": null,

  // Ativa abreviações do Emmet em idiomas que não são suportados por padrão. Adiciona um mapeamento aqui entre o idioma e a linguagem suportada emmet.
  //  Por exemplo:  `{"vue-html":"html","javascript":"javascriptreact"}`
  "emmet.includeLanguages": {},

  // Quando definido como 'falso', o arquivo todo é analisado para determinar se a posição atual é válida para expandir as abreviações Emmet. Quando definido como 'verdadeiro', apenas o conteúdo em torno da posição atual em arquivos css/scss/less é analisado.
  "emmet.optimizeStylesheetParsing": true,

  // Preferências usadas para modificar o comportamento de algumas ações e resolvedores de Emmet.
  "emmet.preferences": {},

  // Mostra abreviações Emmet possíveis como sugestões. Não aplicável em folhas de estilo ou quando emmet.showExpandedAbbreviation está definido como `"never"`.
  "emmet.showAbbreviationSuggestions": true,

  // Mostrar abreviaturas Emmet expandidas como sugestões.
  // A opção "inMarkupAndStylesheetFilesOnly" aplica-se a html, haml, jade, slim, xml, xsl, css, scss, sass, less e stylus.
  // A opção "always" se aplica a todas as partes do arquivo independentemente de marcação/css.
  "emmet.showExpandedAbbreviation": "always",

  // Se 'verdadeiro', então as sugestões Emmet aparecerão como trechos, permitindo você requisitá-los conforme a configuração de '#editor.snippetSuggestions#'.
  "emmet.showSuggestionsAsSnippets": false,

  // Definir o perfil para a sintaxe especificada ou usar seu próprio perfil com regras específicas.
  "emmet.syntaxProfiles": {},

  // Quando habilitado, abreviações Emmet são expandidas ao pressionar TAB.
  "emmet.triggerExpansionOnTab": false,

  // Variáveis a serem usadas em trechos de código Emmet
  "emmet.variables": {}

}
,
{


  // Controla se a detecção automática de tarefas Gulp está ativada ou desativada. Por padrão, é ativado.
  "gulp.autoDetect": "on"

}
,
{


  // A path to file containing the configuration options for jshint. If the file exists it overrides jshint.options and any .jshintrc file
  "jshint.config": null,

  // Control whether or not jshint is enabled for JavaScript files.
  "jshint.enable": true,

  // Matching files and directories are being ignored by jshint. Glob patterns are interpreted relative to the workspace's root folder.
  "jshint.exclude": {},

  // A path to a file containing patterns describing which files and directories should be ignored by jshint. If the file exists it overrides jshint.exclude and any .jshintignore file.
  "jshint.excludePath": null,

  // Lint JavaScript embedded in HTML
  "jshint.lintHTML": false,

  // Configures the path to the jshint module. Can be an absolute path or relative to the current directory.
  "jshint.nodePath": "",

  // The jshint options object to provide args to the jshint command.
  "jshint.options": {},

  // The package manager you use to install node modules.
  "jshint.packageManager": "npm",

  // Report warnings as errors
  "jshint.reportWarningsAsErrors": false,

  // Traces the communication between VS Code and the jshint linter service.
  "jshint.trace.server": "off"

}
,
{

